/**
 * Generated by "@vuepress/internal-site-data"
 */
export const siteData = {
  "title": "",
  "description": "",
  "base": "/fe-face/",
  "pages": [
    {
      "title": "Home",
      "frontmatter": {
        "home": true,
        "heroImage": "logo.svg",
        "actionText": "进入 →",
        "actionLink": "/knowledge/",
        "features": [
          {
            "title": "易懂",
            "details": "知识点简单化"
          },
          {
            "title": "简洁",
            "details": "知识点不啰嗦"
          },
          {
            "title": "博客",
            "details": "YoFoon's Blog"
          }
        ],
        "footer": "MIT Licensed | Copyright © 2020-present YoFoon"
      },
      "regularPath": "/",
      "relativePath": "README.md",
      "key": "v-ae8bcdfc",
      "path": "/"
    },
    {
      "title": "enqueueUpdate",
      "frontmatter": {},
      "regularPath": "/blog/20200414-enqueue-update.html",
      "relativePath": "blog/20200414-enqueue-update.md",
      "key": "v-25f3ca22",
      "path": "/blog/20200414-enqueue-update.html",
      "headers": [
        {
          "level": 2,
          "title": "enqueueUpdate",
          "slug": "enqueueupdate"
        },
        {
          "level": 3,
          "title": "Update",
          "slug": "update"
        },
        {
          "level": 3,
          "title": "updateQueue",
          "slug": "updatequeue"
        }
      ]
    },
    {
      "title": "点击空白处隐藏弹出元素",
      "frontmatter": {},
      "regularPath": "/blog/20200414-hide-element.html",
      "relativePath": "blog/20200414-hide-element.md",
      "key": "v-cbba82ae",
      "path": "/blog/20200414-hide-element.html"
    },
    {
      "title": "IntersectionObserver 懒加载",
      "frontmatter": {},
      "regularPath": "/blog/20200414-intersection-observer.html",
      "relativePath": "blog/20200414-intersection-observer.md",
      "key": "v-16223679",
      "path": "/blog/20200414-intersection-observer.html"
    },
    {
      "title": "ExpirationTime 计算规则",
      "frontmatter": {},
      "regularPath": "/blog/20200414-expiration-time.html",
      "relativePath": "blog/20200414-expiration-time.md",
      "key": "v-071482ce",
      "path": "/blog/20200414-expiration-time.html",
      "headers": [
        {
          "level": 3,
          "title": "ExpirationTime 计算规则",
          "slug": "expirationtime-计算规则"
        }
      ]
    },
    {
      "title": "从 jsx 到 virtual dom",
      "frontmatter": {},
      "regularPath": "/blog/20200414-jsx-2-virtual-dom.html",
      "relativePath": "blog/20200414-jsx-2-virtual-dom.md",
      "key": "v-24fec1ce",
      "path": "/blog/20200414-jsx-2-virtual-dom.html",
      "headers": [
        {
          "level": 2,
          "title": "从 jsx 到 virtual dom",
          "slug": "从-jsx-到-virtual-dom"
        },
        {
          "level": 3,
          "title": "注意：react 的类型规范使用的是 flow，类似 ts，比 ts 检测稍微弱一点",
          "slug": "注意：react-的类型规范使用的是-flow，类似-ts，比-ts-检测稍微弱一点"
        }
      ]
    },
    {
      "title": "React中的数据结构",
      "frontmatter": {},
      "regularPath": "/blog/20200414-react-data-struct.html",
      "relativePath": "blog/20200414-react-data-struct.md",
      "key": "v-43ecadf9",
      "path": "/blog/20200414-react-data-struct.html",
      "headers": [
        {
          "level": 2,
          "title": "React中的数据结构",
          "slug": "react中的数据结构"
        },
        {
          "level": 3,
          "title": "FiberRoot",
          "slug": "fiberroot"
        },
        {
          "level": 3,
          "title": "Fiber",
          "slug": "fiber"
        }
      ]
    },
    {
      "title": "ReactDOM.render",
      "frontmatter": {},
      "regularPath": "/blog/20200414-react-dom-render.html",
      "relativePath": "blog/20200414-react-dom-render.md",
      "key": "v-73917e6d",
      "path": "/blog/20200414-react-dom-render.html",
      "headers": [
        {
          "level": 2,
          "title": "ReactDOM.render",
          "slug": "reactdom-render"
        }
      ]
    },
    {
      "title": "shell 推送 git",
      "frontmatter": {},
      "regularPath": "/blog/20200414-shell-push-git.html",
      "relativePath": "blog/20200414-shell-push-git.md",
      "key": "v-37d4d193",
      "path": "/blog/20200414-shell-push-git.html",
      "headers": [
        {
          "level": 2,
          "title": "shell 推送 git",
          "slug": "shell-推送-git"
        },
        {
          "level": 3,
          "title": "简化版本",
          "slug": "简化版本"
        }
      ]
    },
    {
      "title": "调度入口函数 scheduleWork",
      "frontmatter": {},
      "regularPath": "/blog/20200414-schedule-work.html",
      "relativePath": "blog/20200414-schedule-work.md",
      "key": "v-c69259ce",
      "path": "/blog/20200414-schedule-work.html",
      "headers": [
        {
          "level": 3,
          "title": "调度入口函数 scheduleWork",
          "slug": "调度入口函数-schedulework"
        }
      ]
    },
    {
      "title": "wangEditor 上传附件",
      "frontmatter": {},
      "regularPath": "/blog/20200421-wang-editor-add-upload-file.html",
      "relativePath": "blog/20200421-wang-editor-add-upload-file.md",
      "key": "v-523a7739",
      "path": "/blog/20200421-wang-editor-add-upload-file.html",
      "headers": [
        {
          "level": 2,
          "title": "创建 wangEditor",
          "slug": "创建-wangeditor"
        },
        {
          "level": 2,
          "title": "添加上传图片",
          "slug": "添加上传图片"
        },
        {
          "level": 2,
          "title": "上传附件",
          "slug": "上传附件"
        },
        {
          "level": 3,
          "title": "对选择的文件进行上传",
          "slug": "对选择的文件进行上传"
        }
      ]
    },
    {
      "title": "页面注入50万个li怎么做提升性能？",
      "frontmatter": {},
      "regularPath": "/blog/20200422-ye-mian-zhu-ru-50-wan-ge-li.html",
      "relativePath": "blog/20200422-ye-mian-zhu-ru-50-wan-ge-li.md",
      "key": "v-1caf5bce",
      "path": "/blog/20200422-ye-mian-zhu-ru-50-wan-ge-li.html"
    },
    {
      "title": "前端工程化",
      "frontmatter": {},
      "regularPath": "/blog/20200424-qian-duan-gong-cheng-hua.html",
      "relativePath": "blog/20200424-qian-duan-gong-cheng-hua.md",
      "key": "v-743bb293",
      "path": "/blog/20200424-qian-duan-gong-cheng-hua.html",
      "headers": [
        {
          "level": 2,
          "title": "编译和构建",
          "slug": "编译和构建"
        },
        {
          "level": 3,
          "title": "第一、库/框架选型",
          "slug": "第一、库-框架选型"
        },
        {
          "level": 3,
          "title": "第二、简单构建优化",
          "slug": "第二、简单构建优化"
        },
        {
          "level": 3,
          "title": "第三、JS/CSS模块化开发",
          "slug": "第三、js-css模块化开发"
        },
        {
          "level": 3,
          "title": "第四、组件化开发与资源管理",
          "slug": "第四、组件化开发与资源管理"
        },
        {
          "level": 2,
          "title": "Artifacts",
          "slug": "artifacts"
        },
        {
          "level": 2,
          "title": "部署、发布",
          "slug": "部署、发布"
        },
        {
          "level": 2,
          "title": "CI/CD",
          "slug": "ci-cd"
        },
        {
          "level": 2,
          "title": "前端集成和解决方案",
          "slug": "前端集成和解决方案"
        },
        {
          "level": 2,
          "title": "部署方式",
          "slug": "部署方式"
        },
        {
          "level": 3,
          "title": "蓝绿部署",
          "slug": "蓝绿部署"
        },
        {
          "level": 3,
          "title": "滚动部署",
          "slug": "滚动部署"
        },
        {
          "level": 3,
          "title": "金丝雀发布（灰度发布）",
          "slug": "金丝雀发布（灰度发布）"
        },
        {
          "level": 3,
          "title": "A/B测试",
          "slug": "a-b测试"
        },
        {
          "level": 2,
          "title": "构建和部署",
          "slug": "构建和部署"
        },
        {
          "level": 2,
          "title": "前端灰度、A/B测试方案",
          "slug": "前端灰度、a-b测试方案"
        },
        {
          "level": 2,
          "title": "后端服务一般都会在负载均衡层（nginx居多）做灰度方案等，业界成熟的方案大多为：",
          "slug": "后端服务一般都会在负载均衡层（nginx居多）做灰度方案等，业界成熟的方案大多为："
        },
        {
          "level": 3,
          "title": "前端静态资源要做到灰度或 A/B 测试的效果，几种方案为：",
          "slug": "前端静态资源要做到灰度或-a-b-测试的效果，几种方案为："
        },
        {
          "level": 2,
          "title": "最后",
          "slug": "最后"
        },
        {
          "level": 2,
          "title": "参考文献",
          "slug": "参考文献"
        }
      ]
    },
    {
      "title": "背景",
      "frontmatter": {},
      "regularPath": "/blog/20200914-tong-guo-localStorage-tong-yuan-fa-song-xin-xi.html",
      "relativePath": "blog/20200914-tong-guo-localStorage-tong-yuan-fa-song-xin-xi.md",
      "key": "v-a335fdfe",
      "path": "/blog/20200914-tong-guo-localStorage-tong-yuan-fa-song-xin-xi.html",
      "headers": [
        {
          "level": 2,
          "title": "背景",
          "slug": "背景"
        },
        {
          "level": 2,
          "title": "postMessage",
          "slug": "postmessage"
        },
        {
          "level": 3,
          "title": "实现",
          "slug": "实现"
        },
        {
          "level": 2,
          "title": "localStorage",
          "slug": "localstorage"
        },
        {
          "level": 3,
          "title": "代码封装",
          "slug": "代码封装"
        },
        {
          "level": 2,
          "title": "最后",
          "slug": "最后"
        }
      ]
    },
    {
      "frontmatter": {},
      "regularPath": "/blog/20200605-monit-jiagou.html",
      "relativePath": "blog/20200605-monit-jiagou.md",
      "key": "v-19fbf811",
      "path": "/blog/20200605-monit-jiagou.html"
    },
    {
      "title": "BitMap 算法",
      "frontmatter": {},
      "regularPath": "/blog/20200428-BitMap.html",
      "relativePath": "blog/20200428-BitMap.md",
      "key": "v-5d64c873",
      "path": "/blog/20200428-BitMap.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是BitMap",
          "slug": "什么是bitmap"
        },
        {
          "level": 2,
          "title": "位运算",
          "slug": "位运算"
        },
        {
          "level": 3,
          "title": "按位与 &",
          "slug": "按位与"
        },
        {
          "level": 3,
          "title": "按位或 |",
          "slug": "按位或"
        },
        {
          "level": 3,
          "title": "左移 <<",
          "slug": "左移"
        },
        {
          "level": 2,
          "title": "实现",
          "slug": "实现"
        },
        {
          "level": 3,
          "title": "addMember",
          "slug": "addmember"
        },
        {
          "level": 3,
          "title": "isExist",
          "slug": "isexist"
        },
        {
          "level": 2,
          "title": "大数据排序",
          "slug": "大数据排序"
        },
        {
          "level": 3,
          "title": "再来一个问题",
          "slug": "再来一个问题"
        },
        {
          "level": 2,
          "title": "扩展阅读(布隆过滤器)",
          "slug": "扩展阅读-布隆过滤器"
        },
        {
          "level": 2,
          "title": "参考",
          "slug": "参考"
        }
      ]
    },
    {
      "title": "ArrayBuffer,Blob,FileReader 三大对象",
      "frontmatter": {},
      "regularPath": "/blog/20200430-ArrayBuffer-Blob-File.html",
      "relativePath": "blog/20200430-ArrayBuffer-Blob-File.md",
      "key": "v-56c87979",
      "path": "/blog/20200430-ArrayBuffer-Blob-File.html",
      "headers": [
        {
          "level": 2,
          "title": "ArrayBuffer 对象",
          "slug": "arraybuffer-对象"
        },
        {
          "level": 2,
          "title": "Blob 对象",
          "slug": "blob-对象"
        },
        {
          "level": 3,
          "title": "Blob 实操",
          "slug": "blob-实操"
        },
        {
          "level": 2,
          "title": "FileReader",
          "slug": "filereader"
        },
        {
          "level": 3,
          "title": "实例属性",
          "slug": "实例属性"
        },
        {
          "level": 3,
          "title": "实例方法",
          "slug": "实例方法"
        },
        {
          "level": 2,
          "title": "综合例子",
          "slug": "综合例子"
        }
      ]
    },
    {
      "title": "NODE 大文件读写",
      "frontmatter": {},
      "regularPath": "/blog/20200509-node-big-text.html",
      "relativePath": "blog/20200509-node-big-text.md",
      "key": "v-86fa988e",
      "path": "/blog/20200509-node-big-text.html",
      "headers": [
        {
          "level": 2,
          "title": "思路",
          "slug": "思路"
        },
        {
          "level": 2,
          "title": "实现",
          "slug": "实现"
        },
        {
          "level": 2,
          "title": "调用",
          "slug": "调用"
        }
      ]
    },
    {
      "title": "Webpack HMR 原理解析",
      "frontmatter": {},
      "regularPath": "/knowledge/WebpackHMR.html",
      "relativePath": "knowledge/WebpackHMR.md",
      "key": "v-4d874763",
      "path": "/knowledge/WebpackHMR.html",
      "headers": [
        {
          "level": 2,
          "title": "为什么需要 HMR",
          "slug": "为什么需要-hmr"
        },
        {
          "level": 2,
          "title": "HMR 的工作原理图解",
          "slug": "hmr-的工作原理图解"
        },
        {
          "level": 2,
          "title": "运用 HMR 的简单例子",
          "slug": "运用-hmr-的简单例子"
        },
        {
          "level": 2,
          "title": "写在最后",
          "slug": "写在最后"
        }
      ]
    },
    {
      "title": "知识点",
      "frontmatter": {},
      "regularPath": "/knowledge/",
      "relativePath": "knowledge/README.md",
      "key": "v-57e15338",
      "path": "/knowledge/"
    },
    {
      "title": "算法面试题",
      "frontmatter": {},
      "regularPath": "/knowledge/algorithm.html",
      "relativePath": "knowledge/algorithm.md",
      "key": "v-4306a4ce",
      "path": "/knowledge/algorithm.html",
      "headers": [
        {
          "level": 2,
          "title": "如何分析时间复杂度?",
          "slug": "如何分析时间复杂度"
        },
        {
          "level": 3,
          "title": "冒泡排序（Bubble Sort）",
          "slug": "冒泡排序（bubble-sort）"
        },
        {
          "level": 2,
          "title": "快速排序（Quick Sort）",
          "slug": "快速排序（quick-sort）"
        },
        {
          "level": 2,
          "title": "二分查找法",
          "slug": "二分查找法"
        },
        {
          "level": 3,
          "title": "线性查找",
          "slug": "线性查找"
        }
      ]
    },
    {
      "title": "快速链接链接",
      "frontmatter": {},
      "regularPath": "/blog/",
      "relativePath": "blog/README.md",
      "key": "v-5e8d2d1c",
      "path": "/blog/",
      "headers": [
        {
          "level": 3,
          "title": "REACT",
          "slug": "react"
        }
      ]
    },
    {
      "title": "React 组件复用指南",
      "frontmatter": {},
      "regularPath": "/knowledge/abstract.html",
      "relativePath": "knowledge/abstract.md",
      "key": "v-8f7f7c42",
      "path": "/knowledge/abstract.html",
      "headers": [
        {
          "level": 2,
          "title": "高阶组件(HOC)",
          "slug": "高阶组件-hoc"
        },
        {
          "level": 3,
          "title": "什么是高阶组件？",
          "slug": "什么是高阶组件？"
        },
        {
          "level": 3,
          "title": "HOC 工厂的实现方法",
          "slug": "hoc-工厂的实现方法"
        },
        {
          "level": 3,
          "title": "反向继承(Inheritance Inversion)",
          "slug": "反向继承-inheritance-inversion"
        },
        {
          "level": 2,
          "title": "Inheritance Inversion 的高阶组件不一定会解析完整子树",
          "slug": "inheritance-inversion-的高阶组件不一定会解析完整子树"
        },
        {
          "level": 3,
          "title": "附录 A: HOC 和参数",
          "slug": "附录-a-hoc-和参数"
        },
        {
          "level": 2,
          "title": "渲染属性(Render Props)",
          "slug": "渲染属性-render-props"
        },
        {
          "level": 3,
          "title": "Mixins 存在的问题",
          "slug": "mixins-存在的问题"
        },
        {
          "level": 3,
          "title": "HOC 是新的 Mixin",
          "slug": "hoc-是新的-mixin"
        },
        {
          "level": 3,
          "title": "Render Props",
          "slug": "render-props"
        },
        {
          "level": 3,
          "title": "Render Props > HOCs",
          "slug": "render-props-hocs"
        }
      ]
    },
    {
      "title": "如何写一个 babel",
      "frontmatter": {},
      "regularPath": "/knowledge/ast.html",
      "relativePath": "knowledge/ast.md",
      "key": "v-59f85839",
      "path": "/knowledge/ast.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "前置",
          "slug": "前置"
        },
        {
          "level": 2,
          "title": "代码解析",
          "slug": "代码解析"
        },
        {
          "level": 3,
          "title": "parser 概念",
          "slug": "parser-概念"
        },
        {
          "level": 3,
          "title": "词法分析(Tokenizer -- 词法分析器)",
          "slug": "词法分析-tokenizer-词法分析器"
        },
        {
          "level": 2,
          "title": "代码转换",
          "slug": "代码转换"
        },
        {
          "level": 3,
          "title": "如何转换代码?",
          "slug": "如何转换代码"
        },
        {
          "level": 3,
          "title": "遍历抽象语法树(实现遍历器 traverser)",
          "slug": "遍历抽象语法树-实现遍历器-traverser"
        },
        {
          "level": 3,
          "title": "转换代码(实现转换器 transformer)",
          "slug": "转换代码-实现转换器-transformer"
        },
        {
          "level": 2,
          "title": "生成代码(实现生成器 generator)",
          "slug": "生成代码-实现生成器-generator"
        },
        {
          "level": 2,
          "title": "最后",
          "slug": "最后"
        }
      ]
    },
    {
      "title": "如何开发 Babel 插件",
      "frontmatter": {},
      "regularPath": "/knowledge/babelPlugin.html",
      "relativePath": "knowledge/babelPlugin.md",
      "key": "v-4f5814d9",
      "path": "/knowledge/babelPlugin.html",
      "headers": [
        {
          "level": 2,
          "title": "语言概述",
          "slug": "语言概述"
        },
        {
          "level": 2,
          "title": "Babel 概述",
          "slug": "babel-概述"
        },
        {
          "level": 3,
          "title": "解析",
          "slug": "解析"
        },
        {
          "level": 3,
          "title": "转换",
          "slug": "转换"
        },
        {
          "level": 3,
          "title": "生成",
          "slug": "生成"
        },
        {
          "level": 2,
          "title": "什么是抽象语法树（AST）",
          "slug": "什么是抽象语法树（ast）"
        },
        {
          "level": 2,
          "title": "安装",
          "slug": "安装"
        },
        {
          "level": 2,
          "title": "数组",
          "slug": "数组"
        },
        {
          "level": 2,
          "title": "对象",
          "slug": "对象"
        },
        {
          "level": 2,
          "title": "赋值",
          "slug": "赋值"
        },
        {
          "level": 2,
          "title": "成员",
          "slug": "成员"
        },
        {
          "level": 2,
          "title": "结尾",
          "slug": "结尾"
        }
      ]
    },
    {
      "title": "浏览器基础",
      "frontmatter": {},
      "regularPath": "/knowledge/browser.html",
      "relativePath": "knowledge/browser.md",
      "key": "v-30b29e0e",
      "path": "/knowledge/browser.html",
      "headers": [
        {
          "level": 2,
          "title": "浏览器的主要组成部分是什么？",
          "slug": "浏览器的主要组成部分是什么？"
        },
        {
          "level": 2,
          "title": "浏览器如何解析 css 选择器？",
          "slug": "浏览器如何解析-css-选择器？"
        },
        {
          "level": 2,
          "title": "DOM Tree 是如何构建的？",
          "slug": "dom-tree-是如何构建的？"
        },
        {
          "level": 2,
          "title": "浏览器重绘与重排的区别？",
          "slug": "浏览器重绘与重排的区别？"
        },
        {
          "level": 2,
          "title": "如何触发重排和重绘？",
          "slug": "如何触发重排和重绘？"
        },
        {
          "level": 2,
          "title": "如何避免重绘或者重排？",
          "slug": "如何避免重绘或者重排？"
        },
        {
          "level": 3,
          "title": "集中改变样式",
          "slug": "集中改变样式"
        },
        {
          "level": 3,
          "title": "使用 DocumentFragment",
          "slug": "使用-documentfragment"
        },
        {
          "level": 3,
          "title": "提升为合成层",
          "slug": "提升为合成层"
        },
        {
          "level": 2,
          "title": "前端如何实现即时通讯？",
          "slug": "前端如何实现即时通讯？"
        },
        {
          "level": 3,
          "title": "短轮询",
          "slug": "短轮询"
        },
        {
          "level": 3,
          "title": "comet",
          "slug": "comet"
        },
        {
          "level": 3,
          "title": "SSE",
          "slug": "sse"
        },
        {
          "level": 3,
          "title": "Websocket",
          "slug": "websocket"
        },
        {
          "level": 3,
          "title": "Web Worker",
          "slug": "web-worker"
        },
        {
          "level": 3,
          "title": "Service workers",
          "slug": "service-workers"
        }
      ]
    },
    {
      "title": "CDN 原理简析",
      "frontmatter": {},
      "regularPath": "/knowledge/cdn.html",
      "relativePath": "knowledge/cdn.md",
      "key": "v-e5c06e4e",
      "path": "/knowledge/cdn.html",
      "headers": [
        {
          "level": 3,
          "title": "1. 访问源站的过程",
          "slug": "_1-访问源站的过程"
        },
        {
          "level": 3,
          "title": "2. 通过 CDN 获取缓存内容的过程",
          "slug": "_2-通过-cdn-获取缓存内容的过程"
        }
      ]
    },
    {
      "title": "浏览器的缓存机制",
      "frontmatter": {},
      "regularPath": "/knowledge/cache.html",
      "relativePath": "knowledge/cache.md",
      "key": "v-74567279",
      "path": "/knowledge/cache.html",
      "headers": [
        {
          "level": 2,
          "title": "一、前言",
          "slug": "一、前言"
        },
        {
          "level": 2,
          "title": "二、缓存位置",
          "slug": "二、缓存位置"
        },
        {
          "level": 3,
          "title": "1.Service Worker",
          "slug": "_1-service-worker"
        },
        {
          "level": 3,
          "title": "2.Memory Cache",
          "slug": "_2-memory-cache"
        },
        {
          "level": 3,
          "title": "3.Disk Cache",
          "slug": "_3-disk-cache"
        },
        {
          "level": 3,
          "title": "4.Push Cache",
          "slug": "_4-push-cache"
        },
        {
          "level": 2,
          "title": "三、缓存过程分析",
          "slug": "三、缓存过程分析"
        },
        {
          "level": 2,
          "title": "四、强缓存",
          "slug": "四、强缓存"
        },
        {
          "level": 3,
          "title": "1.Expires",
          "slug": "_1-expires"
        },
        {
          "level": 3,
          "title": "2.Cache-Control",
          "slug": "_2-cache-control"
        },
        {
          "level": 3,
          "title": "3.Expires 和 Cache-Control 两者对比",
          "slug": "_3-expires-和-cache-control-两者对比"
        },
        {
          "level": 2,
          "title": "五、协商缓存",
          "slug": "五、协商缓存"
        },
        {
          "level": 3,
          "title": "1.Last-Modified 和 If-Modified-Since",
          "slug": "_1-last-modified-和-if-modified-since"
        },
        {
          "level": 3,
          "title": "2.ETag 和 If-None-Match",
          "slug": "_2-etag-和-if-none-match"
        },
        {
          "level": 3,
          "title": "3.两者之间对比：",
          "slug": "_3-两者之间对比："
        },
        {
          "level": 2,
          "title": "六、缓存机制",
          "slug": "六、缓存机制"
        },
        {
          "level": 2,
          "title": "七、实际场景应用缓存策略",
          "slug": "七、实际场景应用缓存策略"
        },
        {
          "level": 3,
          "title": "1.频繁变动的资源",
          "slug": "_1-频繁变动的资源"
        },
        {
          "level": 3,
          "title": "2.不常变化的资源",
          "slug": "_2-不常变化的资源"
        },
        {
          "level": 2,
          "title": "八、用户行为对浏览器缓存的影响",
          "slug": "八、用户行为对浏览器缓存的影响"
        }
      ]
    },
    {
      "title": "链表",
      "frontmatter": {},
      "regularPath": "/knowledge/chain.html",
      "relativePath": "knowledge/chain.md",
      "key": "v-7d53d64e",
      "path": "/knowledge/chain.html",
      "headers": [
        {
          "level": 2,
          "title": "反转链表",
          "slug": "反转链表"
        },
        {
          "level": 2,
          "title": "合并两个有序链表",
          "slug": "合并两个有序链表"
        },
        {
          "level": 2,
          "title": "取链表倒数第K节点",
          "slug": "取链表倒数第k节点"
        },
        {
          "level": 2,
          "title": "判断链表是否有环",
          "slug": "判断链表是否有环"
        },
        {
          "level": 2,
          "title": "求链表环的长度",
          "slug": "求链表环的长度"
        },
        {
          "level": 2,
          "title": "寻找有环链表的入口节点",
          "slug": "寻找有环链表的入口节点"
        },
        {
          "level": 2,
          "title": "寻找两个链表的公共节点",
          "slug": "寻找两个链表的公共节点"
        }
      ]
    },
    {
      "title": "书籍/课程推荐",
      "frontmatter": {},
      "regularPath": "/knowledge/book.html",
      "relativePath": "knowledge/book.md",
      "key": "v-0b9fcf51",
      "path": "/knowledge/book.html",
      "headers": [
        {
          "level": 2,
          "title": "书单",
          "slug": "书单"
        },
        {
          "level": 3,
          "title": "JavaScript",
          "slug": "javascript"
        },
        {
          "level": 3,
          "title": "CSS:",
          "slug": "css"
        },
        {
          "level": 3,
          "title": "算法：",
          "slug": "算法："
        },
        {
          "level": 3,
          "title": "安全：",
          "slug": "安全："
        },
        {
          "level": 3,
          "title": "canvas：",
          "slug": "canvas："
        },
        {
          "level": 3,
          "title": "Node",
          "slug": "node"
        },
        {
          "level": 3,
          "title": "网络",
          "slug": "网络"
        }
      ]
    },
    {
      "title": "CSS 基础",
      "frontmatter": {},
      "regularPath": "/knowledge/css.html",
      "relativePath": "knowledge/css.md",
      "key": "v-33964bce",
      "path": "/knowledge/css.html",
      "headers": [
        {
          "level": 2,
          "title": "CSS 选择器的优先级是怎样的？✨",
          "slug": "css-选择器的优先级是怎样的？✨"
        },
        {
          "level": 2,
          "title": "link 和@import 的区别？",
          "slug": "link-和-import-的区别？"
        },
        {
          "level": 2,
          "title": "有哪些方式（CSS）可以隐藏页面元素？",
          "slug": "有哪些方式（css）可以隐藏页面元素？"
        },
        {
          "level": 2,
          "title": "em\\px\\rem 区别？",
          "slug": "em-px-rem-区别？"
        },
        {
          "level": 2,
          "title": "块级元素水平居中的方法？",
          "slug": "块级元素水平居中的方法？"
        },
        {
          "level": 2,
          "title": "CSS 有几种定位方式？",
          "slug": "css-有几种定位方式？"
        },
        {
          "level": 2,
          "title": "如何理解 z-index？✨",
          "slug": "如何理解-z-index？✨"
        },
        {
          "level": 2,
          "title": "如何理解层叠上下文？✨",
          "slug": "如何理解层叠上下文？✨"
        },
        {
          "level": 3,
          "title": "是什么？",
          "slug": "是什么？"
        },
        {
          "level": 3,
          "title": "如何产生？",
          "slug": "如何产生？"
        },
        {
          "level": 2,
          "title": "清除浮动有哪些方法？",
          "slug": "清除浮动有哪些方法？"
        },
        {
          "level": 2,
          "title": "你对 css sprites 的理解，好处是什么？",
          "slug": "你对-css-sprites-的理解，好处是什么？"
        },
        {
          "level": 3,
          "title": "是什么 ？",
          "slug": "是什么-？"
        },
        {
          "level": 3,
          "title": "如何操作？",
          "slug": "如何操作？"
        },
        {
          "level": 3,
          "title": "好处：",
          "slug": "好处："
        },
        {
          "level": 3,
          "title": "不足：",
          "slug": "不足："
        },
        {
          "level": 2,
          "title": "你对媒体查询的理解？",
          "slug": "你对媒体查询的理解？"
        },
        {
          "level": 3,
          "title": "是什么",
          "slug": "是什么"
        },
        {
          "level": 3,
          "title": "如何使用？",
          "slug": "如何使用？"
        },
        {
          "level": 2,
          "title": "你对盒模型的理解 ✨",
          "slug": "你对盒模型的理解-✨"
        },
        {
          "level": 3,
          "title": "是什么？",
          "slug": "是什么？-2"
        },
        {
          "level": 2,
          "title": "标准盒模型和怪异盒模型有什么区别？✨",
          "slug": "标准盒模型和怪异盒模型有什么区别？✨"
        },
        {
          "level": 2,
          "title": "谈谈对 BFC 的理解 ✨",
          "slug": "谈谈对-bfc-的理解-✨"
        },
        {
          "level": 3,
          "title": "是什么？",
          "slug": "是什么？-3"
        },
        {
          "level": 3,
          "title": "如何形成？",
          "slug": "如何形成？"
        },
        {
          "level": 3,
          "title": "作用是什么？",
          "slug": "作用是什么？"
        },
        {
          "level": 2,
          "title": "为什么有时候人们用 translate 来改变位置而不是定位？",
          "slug": "为什么有时候人们用-translate-来改变位置而不是定位？"
        },
        {
          "level": 2,
          "title": "伪类和伪元素的区别是什么？",
          "slug": "伪类和伪元素的区别是什么？"
        },
        {
          "level": 3,
          "title": "是什么？",
          "slug": "是什么？-4"
        },
        {
          "level": 3,
          "title": "区别",
          "slug": "区别"
        },
        {
          "level": 2,
          "title": "你对 flex 的理解？✨",
          "slug": "你对-flex-的理解？✨"
        },
        {
          "level": 2,
          "title": "关于 CSS 的动画与过渡问题",
          "slug": "关于-css-的动画与过渡问题"
        }
      ]
    },
    {
      "title": "框架通用面试题",
      "frontmatter": {},
      "regularPath": "/knowledge/common.html",
      "relativePath": "knowledge/common.md",
      "key": "v-acb8f166",
      "path": "/knowledge/common.html",
      "headers": [
        {
          "level": 2,
          "title": "为什么选择使用框架而不是原生?",
          "slug": "为什么选择使用框架而不是原生"
        },
        {
          "level": 2,
          "title": "虚拟 DOM 的优劣如何?",
          "slug": "虚拟-dom-的优劣如何"
        },
        {
          "level": 2,
          "title": "虚拟 DOM 实现原理?",
          "slug": "虚拟-dom-实现原理"
        }
      ]
    },
    {
      "title": "Proxy 比 defineproperty 优劣对比?",
      "frontmatter": {},
      "regularPath": "/knowledge/devsProxy.html",
      "relativePath": "knowledge/devsProxy.md",
      "key": "v-d9d9828e",
      "path": "/knowledge/devsProxy.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "基于数据劫持实现的双向绑定的特点",
          "slug": "基于数据劫持实现的双向绑定的特点"
        },
        {
          "level": 3,
          "title": "1.1 什么是数据劫持",
          "slug": "_1-1-什么是数据劫持"
        },
        {
          "level": 3,
          "title": "1.2 数据劫持的优势",
          "slug": "_1-2-数据劫持的优势"
        },
        {
          "level": 3,
          "title": "1.3 基于数据劫持双向绑定的实现思路",
          "slug": "_1-3-基于数据劫持双向绑定的实现思路"
        },
        {
          "level": 2,
          "title": "2.基于 Object.defineProperty 双向绑定的特点",
          "slug": "_2-基于-object-defineproperty-双向绑定的特点"
        },
        {
          "level": 3,
          "title": "2.1 极简版的双向绑定",
          "slug": "_2-1-极简版的双向绑定"
        },
        {
          "level": 2,
          "title": "3.Proxy 实现的双向绑定的特点",
          "slug": "_3-proxy-实现的双向绑定的特点"
        },
        {
          "level": 3,
          "title": "3.1 Proxy 可以直接监听对象而非属性",
          "slug": "_3-1-proxy-可以直接监听对象而非属性"
        },
        {
          "level": 3,
          "title": "3.2 Proxy 可以直接监听数组的变化",
          "slug": "_3-2-proxy-可以直接监听数组的变化"
        },
        {
          "level": 3,
          "title": "3.3 Proxy 的其他优势",
          "slug": "_3-3-proxy-的其他优势"
        }
      ]
    },
    {
      "title": "DOM",
      "frontmatter": {},
      "regularPath": "/knowledge/dom.html",
      "relativePath": "knowledge/dom.md",
      "key": "v-47408039",
      "path": "/knowledge/dom.html",
      "headers": [
        {
          "level": 2,
          "title": "DOM 的事件模型是什么？",
          "slug": "dom-的事件模型是什么？"
        },
        {
          "level": 2,
          "title": "DOM 的事件流是什么？",
          "slug": "dom-的事件流是什么？"
        },
        {
          "level": 3,
          "title": "事件冒泡",
          "slug": "事件冒泡"
        },
        {
          "level": 3,
          "title": "事件捕获",
          "slug": "事件捕获"
        },
        {
          "level": 3,
          "title": "事件流",
          "slug": "事件流"
        },
        {
          "level": 2,
          "title": "什么是事件委托",
          "slug": "什么是事件委托"
        }
      ]
    },
    {
      "title": "前端工程化",
      "frontmatter": {},
      "regularPath": "/knowledge/engineering.html",
      "relativePath": "knowledge/engineering.md",
      "key": "v-0f644019",
      "path": "/knowledge/engineering.html",
      "headers": [
        {
          "level": 2,
          "title": "Babel 的原理是什么?",
          "slug": "babel-的原理是什么"
        },
        {
          "level": 2,
          "title": "如何写一个 babel 插件?",
          "slug": "如何写一个-babel-插件"
        },
        {
          "level": 2,
          "title": "你的 git 工作流是怎样的?",
          "slug": "你的-git-工作流是怎样的"
        },
        {
          "level": 2,
          "title": "rebase 与 merge 的区别?",
          "slug": "rebase-与-merge-的区别"
        },
        {
          "level": 2,
          "title": "git reset、git revert 和 git checkout 有什么区别",
          "slug": "git-reset、git-revert-和-git-checkout-有什么区别"
        }
      ]
    },
    {
      "title": "实现深克隆",
      "frontmatter": {},
      "regularPath": "/knowledge/deepclone.html",
      "relativePath": "knowledge/deepclone.md",
      "key": "v-1f7397d9",
      "path": "/knowledge/deepclone.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "浅克隆",
          "slug": "浅克隆"
        },
        {
          "level": 2,
          "title": "深克隆",
          "slug": "深克隆"
        },
        {
          "level": 3,
          "title": "JSON.parse 方法",
          "slug": "json-parse-方法"
        },
        {
          "level": 3,
          "title": "2.2 构造一个深克隆函数",
          "slug": "_2-2-构造一个深克隆函数"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "Event Loop 详解",
      "frontmatter": {},
      "regularPath": "/knowledge/eventLoop.html",
      "relativePath": "knowledge/eventLoop.md",
      "key": "v-143b9e79",
      "path": "/knowledge/eventLoop.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "为啥要弄懂 Event Loop",
          "slug": "为啥要弄懂-event-loop"
        },
        {
          "level": 2,
          "title": "栈、队列的基本概念",
          "slug": "栈、队列的基本概念"
        },
        {
          "level": 3,
          "title": "栈（Stack）",
          "slug": "栈（stack）"
        },
        {
          "level": 3,
          "title": "队列（Queue）",
          "slug": "队列（queue）"
        },
        {
          "level": 2,
          "title": "Event Loop",
          "slug": "event-loop"
        },
        {
          "level": 3,
          "title": "MacroTask（宏任务）",
          "slug": "macrotask（宏任务）"
        },
        {
          "level": 3,
          "title": "MicroTask（微任务）",
          "slug": "microtask（微任务）"
        },
        {
          "level": 2,
          "title": "浏览器中的 Event Loop",
          "slug": "浏览器中的-event-loop"
        },
        {
          "level": 3,
          "title": "JS 调用栈",
          "slug": "js-调用栈"
        },
        {
          "level": 3,
          "title": "同步任务和异步任务",
          "slug": "同步任务和异步任务"
        },
        {
          "level": 3,
          "title": "事件循环的进程模型",
          "slug": "事件循环的进程模型"
        },
        {
          "level": 3,
          "title": "执行进入 microtask 检查点时，用户代理会执行以下步骤：",
          "slug": "执行进入-microtask-检查点时，用户代理会执行以下步骤："
        },
        {
          "level": 2,
          "title": "举个例子",
          "slug": "举个例子"
        },
        {
          "level": 3,
          "title": "第一次执行：",
          "slug": "第一次执行："
        },
        {
          "level": 3,
          "title": "第二次执行：",
          "slug": "第二次执行："
        },
        {
          "level": 3,
          "title": "第三次执行：",
          "slug": "第三次执行："
        },
        {
          "level": 3,
          "title": "第四次执行：",
          "slug": "第四次执行："
        },
        {
          "level": 2,
          "title": "再举个例子",
          "slug": "再举个例子"
        },
        {
          "level": 3,
          "title": "关于 73 以下版本和 73 版本的区别",
          "slug": "关于-73-以下版本和-73-版本的区别"
        },
        {
          "level": 3,
          "title": "在老版本中",
          "slug": "在老版本中"
        },
        {
          "level": 3,
          "title": "引用贺老师知乎上的一个例子",
          "slug": "引用贺老师知乎上的一个例子"
        },
        {
          "level": 3,
          "title": "谷歌（金丝雀）73 版本中",
          "slug": "谷歌（金丝雀）73-版本中"
        },
        {
          "level": 3,
          "title": "详细过程：",
          "slug": "详细过程："
        },
        {
          "level": 2,
          "title": "NodeJS 的 Event Loop",
          "slug": "nodejs-的-event-loop"
        },
        {
          "level": 3,
          "title": "Node的Event loop一共分为 6 个阶段，每个细节具体如下：",
          "slug": "node的event-loop一共分为-6-个阶段，每个细节具体如下："
        },
        {
          "level": 3,
          "title": "timers",
          "slug": "timers"
        },
        {
          "level": 3,
          "title": "pending callbacks",
          "slug": "pending-callbacks"
        },
        {
          "level": 3,
          "title": "poll",
          "slug": "poll"
        },
        {
          "level": 3,
          "title": "check",
          "slug": "check"
        },
        {
          "level": 2,
          "title": "setImmediate() 的 setTimeout()的区别",
          "slug": "setimmediate-的-settimeout-的区别"
        },
        {
          "level": 3,
          "title": "举个例子",
          "slug": "举个例子-2"
        },
        {
          "level": 2,
          "title": "Process.nextTick()",
          "slug": "process-nexttick"
        },
        {
          "level": 3,
          "title": "例子",
          "slug": "例子"
        }
      ]
    },
    {
      "title": "浏览器渲染原理",
      "frontmatter": {},
      "regularPath": "/knowledge/domRender.html",
      "relativePath": "knowledge/domRender.md",
      "key": "v-3f2e188e",
      "path": "/knowledge/domRender.html",
      "headers": [
        {
          "level": 3,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 3,
          "title": "浏览器工作大体流程",
          "slug": "浏览器工作大体流程"
        },
        {
          "level": 3,
          "title": "构建 DOM",
          "slug": "构建-dom"
        },
        {
          "level": 3,
          "title": "构建 CSSOM",
          "slug": "构建-cssom"
        },
        {
          "level": 3,
          "title": "构建渲染树",
          "slug": "构建渲染树"
        },
        {
          "level": 3,
          "title": "布局与绘制",
          "slug": "布局与绘制"
        },
        {
          "level": 3,
          "title": "问题一：渲染过程中遇到 JS 文件怎么处理？",
          "slug": "问题一：渲染过程中遇到-js-文件怎么处理？"
        },
        {
          "level": 3,
          "title": "问题二：你真的了解回流和重绘吗",
          "slug": "问题二：你真的了解回流和重绘吗"
        },
        {
          "level": 3,
          "title": "问题三：async 和 defer 的作用是什么？有什么区别?",
          "slug": "问题三：async-和-defer-的作用是什么？有什么区别"
        },
        {
          "level": 3,
          "title": "defer属性和async属性到底应该使用哪一个？",
          "slug": "defer属性和async属性到底应该使用哪一个？"
        },
        {
          "level": 3,
          "title": "问题四：为什么操作 DOM 慢",
          "slug": "问题四：为什么操作-dom-慢"
        },
        {
          "level": 3,
          "title": "问题五：渲染页面时常见哪些不良现象？",
          "slug": "问题五：渲染页面时常见哪些不良现象？"
        },
        {
          "level": 3,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 3,
          "title": "参考文章",
          "slug": "参考文章"
        }
      ]
    },
    {
      "title": "如何实现一个 Event",
      "frontmatter": {},
      "regularPath": "/knowledge/event.html",
      "relativePath": "knowledge/event.md",
      "key": "v-04ca4d0e",
      "path": "/knowledge/event.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "基本构造",
          "slug": "基本构造"
        },
        {
          "level": 3,
          "title": "初始化 class",
          "slug": "初始化-class"
        },
        {
          "level": 3,
          "title": "监听与触发",
          "slug": "监听与触发"
        },
        {
          "level": 2,
          "title": "升级改造",
          "slug": "升级改造"
        },
        {
          "level": 3,
          "title": "监听/触发器升级",
          "slug": "监听-触发器升级"
        },
        {
          "level": 3,
          "title": "移除监听",
          "slug": "移除监听"
        },
        {
          "level": 3,
          "title": "发现问题",
          "slug": "发现问题"
        }
      ]
    },
    {
      "title": "前端性能优化-执行篇",
      "frontmatter": {},
      "regularPath": "/knowledge/execute.html",
      "relativePath": "knowledge/execute.md",
      "key": "v-fe733a4e",
      "path": "/knowledge/execute.html",
      "headers": [
        {
          "level": 2,
          "title": "动画性能优化",
          "slug": "动画性能优化"
        },
        {
          "level": 3,
          "title": "CSS3 动画优化原理",
          "slug": "css3-动画优化原理"
        },
        {
          "level": 3,
          "title": "CSS3 动画优化",
          "slug": "css3-动画优化"
        },
        {
          "level": 3,
          "title": "Canvas 动画优化",
          "slug": "canvas-动画优化"
        },
        {
          "level": 2,
          "title": "大量数据性能优化",
          "slug": "大量数据性能优化"
        },
        {
          "level": 3,
          "title": "虚拟列表",
          "slug": "虚拟列表"
        },
        {
          "level": 3,
          "title": "Web Worker",
          "slug": "web-worker-2"
        }
      ]
    },
    {
      "title": "JavaScript 的『预解释』与『变量提升』",
      "frontmatter": {},
      "regularPath": "/knowledge/hoisting.html",
      "relativePath": "knowledge/hoisting.md",
      "key": "v-b2419736",
      "path": "/knowledge/hoisting.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "从一个实例开始",
          "slug": "从一个实例开始"
        },
        {
          "level": 2,
          "title": "avaScript 预解释",
          "slug": "avascript-预解释"
        },
        {
          "level": 2,
          "title": "JavaScript 执行环境",
          "slug": "javascript-执行环境"
        },
        {
          "level": 2,
          "title": "变量提升",
          "slug": "变量提升"
        },
        {
          "level": 2,
          "title": "函数声明与函数表达式",
          "slug": "函数声明与函数表达式"
        },
        {
          "level": 2,
          "title": "冲突处理",
          "slug": "冲突处理"
        },
        {
          "level": 2,
          "title": "ES6 中的 let",
          "slug": "es6-中的-let"
        }
      ]
    },
    {
      "title": "HTTP 协议",
      "frontmatter": {},
      "regularPath": "/knowledge/http.html",
      "relativePath": "knowledge/http.md",
      "key": "v-7fc5fc93",
      "path": "/knowledge/http.html",
      "headers": [
        {
          "level": 2,
          "title": "HTTP 有哪些方法？",
          "slug": "http-有哪些方法？"
        },
        {
          "level": 3,
          "title": "这些方法的具体作用是什么？",
          "slug": "这些方法的具体作用是什么？"
        },
        {
          "level": 2,
          "title": "GET 和 POST 有什么区别？",
          "slug": "get-和-post-有什么区别？"
        },
        {
          "level": 2,
          "title": "PUT 和 POST 都是给服务器发送新增资源，有什么区别？",
          "slug": "put-和-post-都是给服务器发送新增资源，有什么区别？"
        },
        {
          "level": 2,
          "title": "http 请求报文",
          "slug": "http-请求报文"
        },
        {
          "level": 2,
          "title": "http 的响应报文",
          "slug": "http-的响应报文"
        },
        {
          "level": 2,
          "title": "HTTP 的部首有哪些？",
          "slug": "http-的部首有哪些？"
        },
        {
          "level": 2,
          "title": "HTTP 状态码",
          "slug": "http-状态码"
        },
        {
          "level": 2,
          "title": "307，303，302 的区别？",
          "slug": "_307，303，302-的区别？"
        },
        {
          "level": 2,
          "title": "HTTP 的 keep-alive 是干什么的？",
          "slug": "http-的-keep-alive-是干什么的？"
        }
      ]
    },
    {
      "title": "React Fiber 架构解析",
      "frontmatter": {},
      "regularPath": "/knowledge/fiber.html",
      "relativePath": "knowledge/fiber.md",
      "key": "v-7d0026b9",
      "path": "/knowledge/fiber.html",
      "headers": [
        {
          "level": 2,
          "title": "背景介绍",
          "slug": "背景介绍"
        },
        {
          "level": 2,
          "title": "从 React 元素到 Fiber 节点",
          "slug": "从-react-元素到-fiber-节点"
        },
        {
          "level": 3,
          "title": "React 元素",
          "slug": "react-元素"
        },
        {
          "level": 3,
          "title": "Fiber 节点",
          "slug": "fiber-节点"
        },
        {
          "level": 3,
          "title": "current 树及 workInProgress 树",
          "slug": "current-树及-workinprogress-树"
        },
        {
          "level": 3,
          "title": "副作用",
          "slug": "副作用"
        },
        {
          "level": 3,
          "title": "副作用列表",
          "slug": "副作用列表"
        },
        {
          "level": 3,
          "title": "Fiber 树的根节点",
          "slug": "fiber-树的根节点"
        },
        {
          "level": 3,
          "title": "Fiber 节点结构",
          "slug": "fiber-节点结构"
        },
        {
          "level": 2,
          "title": "通用算法",
          "slug": "通用算法"
        },
        {
          "level": 3,
          "title": "Render 阶段",
          "slug": "render-阶段"
        },
        {
          "level": 3,
          "title": "工作循环的主要步骤",
          "slug": "工作循环的主要步骤"
        },
        {
          "level": 3,
          "title": "commit  阶段",
          "slug": "commit-阶段"
        },
        {
          "level": 3,
          "title": "更新前的生命周期方法",
          "slug": "更新前的生命周期方法"
        },
        {
          "level": 3,
          "title": "DOM 更新",
          "slug": "dom-更新"
        },
        {
          "level": 3,
          "title": "更新后的生命周期方法",
          "slug": "更新后的生命周期方法"
        }
      ]
    },
    {
      "title": "HTML 基础",
      "frontmatter": {},
      "regularPath": "/knowledge/html.html",
      "relativePath": "knowledge/html.md",
      "key": "v-794ea4cd",
      "path": "/knowledge/html.html",
      "headers": [
        {
          "level": 2,
          "title": "HTML5 为什么只写  ？",
          "slug": "html5-为什么只写-？"
        },
        {
          "level": 2,
          "title": "data- 属性的作用？",
          "slug": "data-属性的作用？"
        },
        {
          "level": 2,
          "title": "HTML 全局属性（Global Attributes）有哪些？",
          "slug": "html-全局属性（global-attributes）有哪些？"
        },
        {
          "level": 2,
          "title": "meta 有哪些常见的值？",
          "slug": "meta-有哪些常见的值？"
        },
        {
          "level": 2,
          "title": "src 和 href 的区别？",
          "slug": "src-和-href-的区别？"
        },
        {
          "level": 2,
          "title": "HTML5 离线缓存原理",
          "slug": "html5-离线缓存原理"
        },
        {
          "level": 3,
          "title": "目录结构",
          "slug": "目录结构"
        },
        {
          "level": 3,
          "title": "如何使用",
          "slug": "如何使用"
        }
      ]
    },
    {
      "title": "HTTP 笔试部分",
      "frontmatter": {},
      "regularPath": "/knowledge/httpWritten.html",
      "relativePath": "knowledge/httpWritten.md",
      "key": "v-448b1099",
      "path": "/knowledge/httpWritten.html",
      "headers": [
        {
          "level": 2,
          "title": "缓存题",
          "slug": "缓存题"
        },
        {
          "level": 3,
          "title": "问题一：当点击“重新访问 page 页”链接重新加载该页面后， head.png 如何二次加载？",
          "slug": "问题一：当点击“重新访问-page-页”链接重新加载该页面后，-head-png-如何二次加载？"
        },
        {
          "level": 3,
          "title": "问题二：如果将上述信息中的 Cache-Control 设置为 private，那么结果又会如何呢？",
          "slug": "问题二：如果将上述信息中的-cache-control-设置为-private，那么结果又会如何呢？"
        }
      ]
    },
    {
      "title": "HTTP2",
      "frontmatter": {},
      "regularPath": "/knowledge/http2.html",
      "relativePath": "knowledge/http2.md",
      "key": "v-b2ce190e",
      "path": "/knowledge/http2.html",
      "headers": [
        {
          "level": 2,
          "title": "HTTP2",
          "slug": "http2"
        },
        {
          "level": 2,
          "title": "二、HTTP/1.1 的缺陷",
          "slug": "二、http-1-1-的缺陷"
        },
        {
          "level": 3,
          "title": "1.高延迟--带来页面加载速度的降低",
          "slug": "_1-高延迟-带来页面加载速度的降低"
        },
        {
          "level": 3,
          "title": "2.无状态特性--带来的巨大 HTTP 头部",
          "slug": "_2-无状态特性-带来的巨大-http-头部"
        },
        {
          "level": 3,
          "title": "3.明文传输--带来的不安全性",
          "slug": "_3-明文传输-带来的不安全性"
        },
        {
          "level": 3,
          "title": "4.不支持服务器推送消息",
          "slug": "_4-不支持服务器推送消息"
        },
        {
          "level": 2,
          "title": "三、SPDY 协议与 HTTP/2 简介",
          "slug": "三、spdy-协议与-http-2-简介"
        },
        {
          "level": 3,
          "title": "1.SPDY 协议",
          "slug": "_1-spdy-协议"
        },
        {
          "level": 3,
          "title": "2.HTTP/2 简介",
          "slug": "_2-http-2-简介"
        },
        {
          "level": 2,
          "title": "四、HTTP/2 新特性",
          "slug": "四、http-2-新特性"
        },
        {
          "level": 3,
          "title": "1.二进制传输",
          "slug": "_1-二进制传输"
        },
        {
          "level": 3,
          "title": "2.Header 压缩",
          "slug": "_2-header-压缩"
        },
        {
          "level": 3,
          "title": "3.多路复用",
          "slug": "_3-多路复用"
        },
        {
          "level": 3,
          "title": "4.Server Push",
          "slug": "_4-server-push"
        },
        {
          "level": 3,
          "title": "5.提高安全性",
          "slug": "_5-提高安全性"
        },
        {
          "level": 2,
          "title": "六、HTTP/3 新特性",
          "slug": "六、http-3-新特性"
        },
        {
          "level": 3,
          "title": "1.HTTP/2 的缺点",
          "slug": "_1-http-2-的缺点"
        },
        {
          "level": 3,
          "title": "2.HTTP/3 简介",
          "slug": "_2-http-3-简介"
        },
        {
          "level": 3,
          "title": "3.QUIC 新功能",
          "slug": "_3-quic-新功能"
        },
        {
          "level": 2,
          "title": "七、总结",
          "slug": "七、总结"
        }
      ]
    },
    {
      "title": "HTTPS",
      "frontmatter": {},
      "regularPath": "/knowledge/https.html",
      "relativePath": "knowledge/https.md",
      "key": "v-b470fdce",
      "path": "/knowledge/https.html",
      "headers": [
        {
          "level": 2,
          "title": "一、什么是 HTTPS",
          "slug": "一、什么是-https"
        },
        {
          "level": 2,
          "title": "二、为什么需要 HTTPS",
          "slug": "二、为什么需要-https"
        },
        {
          "level": 2,
          "title": "三、HTTPS 如何解决 HTTP 上述问题?",
          "slug": "三、https-如何解决-http-上述问题"
        },
        {
          "level": 3,
          "title": "1.解决内容可能被窃听的问题——加密",
          "slug": "_1-解决内容可能被窃听的问题——加密"
        },
        {
          "level": 3,
          "title": "2.解决报文可能遭篡改问题——数字签名",
          "slug": "_2-解决报文可能遭篡改问题——数字签名"
        },
        {
          "level": 3,
          "title": "3.解决通信方身份可能被伪装的问题——数字证书",
          "slug": "_3-解决通信方身份可能被伪装的问题——数字证书"
        },
        {
          "level": 2,
          "title": "四、 HTTPS 工作流程",
          "slug": "四、-https-工作流程"
        },
        {
          "level": 2,
          "title": "五、HTTP 与 HTTPS 的区别",
          "slug": "五、http-与-https-的区别"
        },
        {
          "level": 2,
          "title": "六、为何不所有的网站都使用 HTTPS",
          "slug": "六、为何不所有的网站都使用-https"
        },
        {
          "level": 2,
          "title": "如何劫持 https 的请求，提供思路",
          "slug": "如何劫持-https-的请求，提供思路"
        }
      ]
    },
    {
      "title": "实现不可变数据",
      "frontmatter": {},
      "regularPath": "/knowledge/immutable.html",
      "relativePath": "knowledge/immutable.md",
      "key": "v-295456f9",
      "path": "/knowledge/immutable.html",
      "headers": [
        {
          "level": 2,
          "title": "1.可变数据的副作用",
          "slug": "_1-可变数据的副作用"
        },
        {
          "level": 2,
          "title": "2.不可变数据的解决方案",
          "slug": "_2-不可变数据的解决方案"
        },
        {
          "level": 2,
          "title": "3.实现更简单的 immutable",
          "slug": "_3-实现更简单的-immutable"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "前端跨域",
      "frontmatter": {},
      "regularPath": "/knowledge/jsonp.html",
      "relativePath": "knowledge/jsonp.md",
      "key": "v-36baf439",
      "path": "/knowledge/jsonp.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是浏览器同源策略？",
          "slug": "什么是浏览器同源策略？"
        },
        {
          "level": 2,
          "title": "如何实现跨域？",
          "slug": "如何实现跨域？"
        },
        {
          "level": 2,
          "title": "最经典的跨域方案 jsonp",
          "slug": "最经典的跨域方案-jsonp"
        },
        {
          "level": 2,
          "title": "最流行的跨域方案 cors",
          "slug": "最流行的跨域方案-cors"
        },
        {
          "level": 2,
          "title": "最方便的跨域方案 Nginx",
          "slug": "最方便的跨域方案-nginx"
        },
        {
          "level": 2,
          "title": "其它跨域方案",
          "slug": "其它跨域方案"
        }
      ]
    },
    {
      "title": "JavaScript 基础",
      "frontmatter": {},
      "regularPath": "/knowledge/jsBasic.html",
      "relativePath": "knowledge/jsBasic.md",
      "key": "v-3002a64e",
      "path": "/knowledge/jsBasic.html",
      "headers": [
        {
          "level": 2,
          "title": "本章索引",
          "slug": "本章索引"
        },
        {
          "level": 2,
          "title": "一段 JavaScript 代码是如何执行的？✨",
          "slug": "一段-javascript-代码是如何执行的？✨"
        },
        {
          "level": 2,
          "title": "理解闭包吗？✨",
          "slug": "理解闭包吗？✨"
        },
        {
          "level": 3,
          "title": "闭包是什么",
          "slug": "闭包是什么"
        },
        {
          "level": 3,
          "title": "闭包的作用",
          "slug": "闭包的作用"
        },
        {
          "level": 2,
          "title": "JavaScript 的作用域链理解吗？✨",
          "slug": "javascript-的作用域链理解吗？✨"
        },
        {
          "level": 2,
          "title": "ES6 模块与 CommonJS 模块有什么区别？",
          "slug": "es6-模块与-commonjs-模块有什么区别？"
        },
        {
          "level": 2,
          "title": "js 有哪些类型？",
          "slug": "js-有哪些类型？"
        },
        {
          "level": 2,
          "title": "为什么会有 BigInt 的提案？",
          "slug": "为什么会有-bigint-的提案？"
        },
        {
          "level": 2,
          "title": "null 与 undefined 的区别是什么？",
          "slug": "null-与-undefined-的区别是什么？"
        },
        {
          "level": 2,
          "title": "0.1+0.2 为什么不等于 0.3？",
          "slug": "_0-1-0-2-为什么不等于-0-3？"
        },
        {
          "level": 3,
          "title": "将 0.1 转换为二进制表示",
          "slug": "将-0-1-转换为二进制表示"
        },
        {
          "level": 3,
          "title": "通过科学计数法表示",
          "slug": "通过科学计数法表示"
        },
        {
          "level": 3,
          "title": "转换为 IEEE 754 标准表示",
          "slug": "转换为-ieee-754-标准表示"
        },
        {
          "level": 2,
          "title": "类型转换的规则有哪些？",
          "slug": "类型转换的规则有哪些？"
        },
        {
          "level": 2,
          "title": "类型转换的原理是什么？",
          "slug": "类型转换的原理是什么？"
        },
        {
          "level": 2,
          "title": "谈谈你对原型链的理解？✨",
          "slug": "谈谈你对原型链的理解？✨"
        },
        {
          "level": 3,
          "title": "原型对象",
          "slug": "原型对象"
        },
        {
          "level": 3,
          "title": "原型链",
          "slug": "原型链"
        },
        {
          "level": 2,
          "title": "如何判断是否是数组？",
          "slug": "如何判断是否是数组？"
        },
        {
          "level": 2,
          "title": "谈一谈你对 this 的了解？✨",
          "slug": "谈一谈你对-this-的了解？✨"
        },
        {
          "level": 2,
          "title": "那么箭头函数的 this 指向哪里？✨",
          "slug": "那么箭头函数的-this-指向哪里？✨"
        },
        {
          "level": 2,
          "title": "async/await 是什么？",
          "slug": "async-await-是什么？"
        },
        {
          "level": 2,
          "title": "async/await 相比于 Promise 的优势？",
          "slug": "async-await-相比于-promise-的优势？"
        },
        {
          "level": 2,
          "title": "JavaScript 的参数是按照什么方式传递的？",
          "slug": "javascript-的参数是按照什么方式传递的？"
        },
        {
          "level": 3,
          "title": "基本类型传递方式",
          "slug": "基本类型传递方式"
        },
        {
          "level": 3,
          "title": "复杂类型按引用传递?",
          "slug": "复杂类型按引用传递"
        },
        {
          "level": 3,
          "title": "按共享传递",
          "slug": "按共享传递"
        },
        {
          "level": 2,
          "title": "聊一聊如何在 JavaScript 中实现不可变对象？",
          "slug": "聊一聊如何在-javascript-中实现不可变对象？"
        },
        {
          "level": 2,
          "title": "JavaScript 的基本类型和复杂类型是储存在哪里的？",
          "slug": "javascript-的基本类型和复杂类型是储存在哪里的？"
        },
        {
          "level": 2,
          "title": "讲讲 JavaScript 垃圾回收是怎么做的？",
          "slug": "讲讲-javascript-垃圾回收是怎么做的？"
        }
      ]
    },
    {
      "title": "JavaScript 的运行机制",
      "frontmatter": {},
      "regularPath": "/knowledge/mechanism.html",
      "relativePath": "knowledge/mechanism.md",
      "key": "v-1fdd4cd9",
      "path": "/knowledge/mechanism.html",
      "headers": [
        {
          "level": 2,
          "title": "JavaScript 的执行环境",
          "slug": "javascript-的执行环境"
        },
        {
          "level": 3,
          "title": "JavaScript 引擎(JavaScript Engine)",
          "slug": "javascript-引擎-javascript-engine"
        },
        {
          "level": 3,
          "title": "JavaScript 运行时（JavaScript Runtime）",
          "slug": "javascript-运行时（javascript-runtime）"
        },
        {
          "level": 3,
          "title": "可执行代码",
          "slug": "可执行代码"
        },
        {
          "level": 2,
          "title": "JavaScript 执行",
          "slug": "javascript-执行"
        },
        {
          "level": 3,
          "title": "堆",
          "slug": "堆"
        },
        {
          "level": 3,
          "title": "调用栈",
          "slug": "调用栈"
        },
        {
          "level": 3,
          "title": "执行上下文(execution context)",
          "slug": "执行上下文-execution-context"
        },
        {
          "level": 3,
          "title": "执行过程",
          "slug": "执行过程"
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        },
        {
          "level": 3,
          "title": "this 是怎么被绑定的?",
          "slug": "this-是怎么被绑定的"
        },
        {
          "level": 3,
          "title": "作用域链是怎么形成的？",
          "slug": "作用域链是怎么形成的？"
        },
        {
          "level": 3,
          "title": "闭包是怎么形成的？",
          "slug": "闭包是怎么形成的？"
        }
      ]
    },
    {
      "title": "前端性能优化",
      "frontmatter": {},
      "regularPath": "/knowledge/load.html",
      "relativePath": "knowledge/load.md",
      "key": "v-043e84d7",
      "path": "/knowledge/load.html",
      "headers": [
        {
          "level": 3,
          "title": "白屏的性能优化",
          "slug": "白屏的性能优化"
        },
        {
          "level": 3,
          "title": "开启浏览器缓存",
          "slug": "开启浏览器缓存"
        },
        {
          "level": 3,
          "title": "FMP(首次有意义绘制)",
          "slug": "fmp-首次有意义绘制"
        },
        {
          "level": 3,
          "title": "TTI(可交互时间)",
          "slug": "tti-可交互时间"
        },
        {
          "level": 2,
          "title": "组件加载",
          "slug": "组件加载"
        },
        {
          "level": 3,
          "title": "组件懒加载",
          "slug": "组件懒加载"
        },
        {
          "level": 3,
          "title": "组件预加载",
          "slug": "组件预加载"
        },
        {
          "level": 3,
          "title": "keep-alive",
          "slug": "keep-alive"
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        }
      ]
    },
    {
      "title": "JS 手写源码",
      "frontmatter": {},
      "regularPath": "/knowledge/jsWritten.html",
      "relativePath": "knowledge/jsWritten.md",
      "key": "v-fdea170e",
      "path": "/knowledge/jsWritten.html",
      "headers": [
        {
          "level": 2,
          "title": "实现防抖函数（debounce）",
          "slug": "实现防抖函数（debounce）"
        },
        {
          "level": 2,
          "title": "实现节流函数（throttle）",
          "slug": "实现节流函数（throttle）"
        },
        {
          "level": 2,
          "title": "深克隆（deepclone）",
          "slug": "深克隆（deepclone）"
        },
        {
          "level": 2,
          "title": "实现 Event(event bus)",
          "slug": "实现-event-event-bus"
        },
        {
          "level": 2,
          "title": "实现 instanceOf",
          "slug": "实现-instanceof"
        },
        {
          "level": 2,
          "title": "模拟 new",
          "slug": "模拟-new"
        },
        {
          "level": 2,
          "title": "实现一个 call",
          "slug": "实现一个-call"
        },
        {
          "level": 2,
          "title": "实现 apply 方法",
          "slug": "实现-apply-方法"
        },
        {
          "level": 2,
          "title": "实现 bind",
          "slug": "实现-bind"
        },
        {
          "level": 2,
          "title": "模拟 Object.create",
          "slug": "模拟-object-create"
        },
        {
          "level": 2,
          "title": "实现类的继承",
          "slug": "实现类的继承"
        },
        {
          "level": 2,
          "title": "实现 JSON.parse",
          "slug": "实现-json-parse"
        },
        {
          "level": 2,
          "title": "实现 JSONP",
          "slug": "实现-jsonp"
        },
        {
          "level": 2,
          "title": "实现 Promise",
          "slug": "实现-promise"
        },
        {
          "level": 2,
          "title": "实现ajax",
          "slug": "实现ajax"
        }
      ]
    },
    {
      "title": "React 面试题",
      "frontmatter": {},
      "regularPath": "/knowledge/react.html",
      "relativePath": "knowledge/react.md",
      "key": "v-6e197cce",
      "path": "/knowledge/react.html",
      "headers": [
        {
          "level": 2,
          "title": "React 最新的生命周期是怎样的?",
          "slug": "react-最新的生命周期是怎样的"
        },
        {
          "level": 2,
          "title": "React 的请求应该放在哪个生命周期中?",
          "slug": "react-的请求应该放在哪个生命周期中"
        },
        {
          "level": 2,
          "title": "setState 到底是异步还是同步?",
          "slug": "setstate-到底是异步还是同步"
        },
        {
          "level": 2,
          "title": "React 组件通信如何实现?",
          "slug": "react-组件通信如何实现"
        },
        {
          "level": 2,
          "title": "React 有哪些优化性能是手段?",
          "slug": "react-有哪些优化性能是手段"
        },
        {
          "level": 2,
          "title": "React 如何进行组件/逻辑复用?",
          "slug": "react-如何进行组件-逻辑复用"
        },
        {
          "level": 2,
          "title": "React Hooks 优点",
          "slug": "react-hooks-优点"
        },
        {
          "level": 2,
          "title": "React Hooks 缺陷",
          "slug": "react-hooks-缺陷"
        },
        {
          "level": 2,
          "title": "你是如何理解 fiber 的?",
          "slug": "你是如何理解-fiber-的"
        },
        {
          "level": 2,
          "title": "你对 Time Slice 的理解?",
          "slug": "你对-time-slice-的理解"
        },
        {
          "level": 2,
          "title": "redux 的工作流程?",
          "slug": "redux-的工作流程"
        },
        {
          "level": 2,
          "title": "react-redux 是如何工作的?",
          "slug": "react-redux-是如何工作的"
        },
        {
          "level": 2,
          "title": "React合成事件和DOM原生事件",
          "slug": "react合成事件和dom原生事件"
        },
        {
          "level": 3,
          "title": "先说一下结论",
          "slug": "先说一下结论"
        },
        {
          "level": 3,
          "title": "响应顺序",
          "slug": "响应顺序"
        },
        {
          "level": 3,
          "title": "阻止冒泡",
          "slug": "阻止冒泡"
        },
        {
          "level": 2,
          "title": "redux 与 mobx 的区别?",
          "slug": "redux-与-mobx-的区别"
        },
        {
          "level": 2,
          "title": "redux 中如何进行异步操作?",
          "slug": "redux-中如何进行异步操作"
        },
        {
          "level": 2,
          "title": "redux 异步中间件之间的优劣?",
          "slug": "redux-异步中间件之间的优劣"
        }
      ]
    },
    {
      "title": "JavaScript 内存管理",
      "frontmatter": {},
      "regularPath": "/knowledge/memory.html",
      "relativePath": "knowledge/memory.md",
      "key": "v-459938be",
      "path": "/knowledge/memory.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "内存模型",
          "slug": "内存模型"
        },
        {
          "level": 2,
          "title": "生命周期",
          "slug": "生命周期"
        },
        {
          "level": 2,
          "title": "内存回收",
          "slug": "内存回收"
        },
        {
          "level": 3,
          "title": "1.标记清除",
          "slug": "_1-标记清除"
        },
        {
          "level": 3,
          "title": "2.引用计数",
          "slug": "_2-引用计数"
        },
        {
          "level": 3,
          "title": "V8 的内存分代",
          "slug": "v8-的内存分代"
        },
        {
          "level": 3,
          "title": "Stop The World （全停顿）",
          "slug": "stop-the-world-（全停顿）"
        },
        {
          "level": 3,
          "title": "Scavenge 算法",
          "slug": "scavenge-算法"
        },
        {
          "level": 3,
          "title": "对象晋升",
          "slug": "对象晋升"
        },
        {
          "level": 3,
          "title": "Mark-Sweep & Mark-Compact",
          "slug": "mark-sweep-mark-compact"
        },
        {
          "level": 3,
          "title": "Incremental Marking（增量标记）",
          "slug": "incremental-marking（增量标记）"
        },
        {
          "level": 3,
          "title": "lazy sweeping（延迟清理）",
          "slug": "lazy-sweeping（延迟清理）"
        },
        {
          "level": 2,
          "title": "内存泄露",
          "slug": "内存泄露"
        },
        {
          "level": 3,
          "title": "引起内存泄漏的几个禁忌",
          "slug": "引起内存泄漏的几个禁忌"
        },
        {
          "level": 3,
          "title": "1.意外的全局变量",
          "slug": "_1-意外的全局变量"
        },
        {
          "level": 3,
          "title": "2.被遗忘的计时器或回调函数",
          "slug": "_2-被遗忘的计时器或回调函数"
        },
        {
          "level": 3,
          "title": "3.闭包",
          "slug": "_3-闭包"
        },
        {
          "level": 3,
          "title": "4.没有清理的 DOM 元素引用",
          "slug": "_4-没有清理的-dom-元素引用"
        },
        {
          "level": 2,
          "title": "四、内存泄漏的识别方法",
          "slug": "四、内存泄漏的识别方法"
        }
      ]
    },
    {
      "title": "React 错误捕获",
      "frontmatter": {},
      "regularPath": "/knowledge/reactError.html",
      "relativePath": "knowledge/reactError.md",
      "key": "v-e52a8dde",
      "path": "/knowledge/reactError.html",
      "headers": [
        {
          "level": 2,
          "title": "使用方法",
          "slug": "使用方法"
        },
        {
          "level": 2,
          "title": "捕获范围",
          "slug": "捕获范围"
        },
        {
          "level": 2,
          "title": "区别",
          "slug": "区别"
        },
        {
          "level": 2,
          "title": "如何放置错误边界",
          "slug": "如何放置错误边界"
        },
        {
          "level": 2,
          "title": "错误边界实战",
          "slug": "错误边界实战"
        }
      ]
    },
    {
      "title": "Node.js面试题",
      "frontmatter": {},
      "regularPath": "/knowledge/node.html",
      "relativePath": "knowledge/node.md",
      "key": "v-6f38f6c2",
      "path": "/knowledge/node.html"
    },
    {
      "title": "Vue 的响应式系统",
      "frontmatter": {},
      "regularPath": "/knowledge/reactivity.html",
      "relativePath": "knowledge/reactivity.md",
      "key": "v-4c808342",
      "path": "/knowledge/reactivity.html",
      "headers": [
        {
          "level": 2,
          "title": "响应式系统",
          "slug": "响应式系统"
        },
        {
          "level": 2,
          "title": "发布订阅中心",
          "slug": "发布订阅中心"
        },
        {
          "level": 2,
          "title": "监听者的实现",
          "slug": "监听者的实现"
        },
        {
          "level": 2,
          "title": "订阅者的实现",
          "slug": "订阅者的实现"
        },
        {
          "level": 2,
          "title": "批量更新的实现",
          "slug": "批量更新的实现"
        },
        {
          "level": 2,
          "title": "梳理",
          "slug": "梳理"
        },
        {
          "level": 2,
          "title": "响应式系统并不是全部",
          "slug": "响应式系统并不是全部"
        }
      ]
    },
    {
      "title": "React-hooks 抽象组件",
      "frontmatter": {},
      "regularPath": "/knowledge/reactHook.html",
      "relativePath": "knowledge/reactHook.md",
      "key": "v-184d620e",
      "path": "/knowledge/reactHook.html",
      "headers": [
        {
          "level": 2,
          "title": "1 引言",
          "slug": "_1-引言"
        },
        {
          "level": 2,
          "title": "2 精读",
          "slug": "_2-精读"
        },
        {
          "level": 3,
          "title": "DOM 副作用修改 / 监听",
          "slug": "dom-副作用修改-监听"
        },
        {
          "level": 3,
          "title": "组件辅助",
          "slug": "组件辅助"
        },
        {
          "level": 3,
          "title": "做动画",
          "slug": "做动画"
        },
        {
          "level": 3,
          "title": "发请求",
          "slug": "发请求"
        },
        {
          "level": 3,
          "title": "填表单",
          "slug": "填表单"
        },
        {
          "level": 3,
          "title": "模拟生命周期",
          "slug": "模拟生命周期"
        },
        {
          "level": 3,
          "title": "存数据",
          "slug": "存数据"
        },
        {
          "level": 3,
          "title": "封装原有库",
          "slug": "封装原有库"
        },
        {
          "level": 2,
          "title": "3 总结",
          "slug": "_3-总结"
        }
      ]
    },
    {
      "title": "常见请求头和响应头",
      "frontmatter": {},
      "regularPath": "/knowledge/requestHeader.html",
      "relativePath": "knowledge/requestHeader.md",
      "key": "v-fa3de08e",
      "path": "/knowledge/requestHeader.html",
      "headers": [
        {
          "level": 2,
          "title": "请求头",
          "slug": "请求头"
        },
        {
          "level": 2,
          "title": "响应头",
          "slug": "响应头"
        },
        {
          "level": 2,
          "title": "HTTP 协议定义了几个可以用来控制浏览器缓存关键字，它们是：",
          "slug": "http-协议定义了几个可以用来控制浏览器缓存关键字，它们是："
        },
        {
          "level": 2,
          "title": "浏览器缓存行为还有用户的行为有关",
          "slug": "浏览器缓存行为还有用户的行为有关"
        }
      ]
    },
    {
      "title": "redux 原理全解",
      "frontmatter": {},
      "regularPath": "/knowledge/redux.html",
      "relativePath": "knowledge/redux.md",
      "key": "v-c4d2d88e",
      "path": "/knowledge/redux.html",
      "headers": [
        {
          "level": 2,
          "title": "Redux 是什么？",
          "slug": "redux-是什么？"
        },
        {
          "level": 2,
          "title": "为什么要用 Redux？",
          "slug": "为什么要用-redux？"
        },
        {
          "level": 2,
          "title": "Redux 思想追溯",
          "slug": "redux-思想追溯"
        },
        {
          "level": 3,
          "title": "什么是 ES？",
          "slug": "什么是-es？"
        },
        {
          "level": 3,
          "title": "CQRS（Command Query Responsibility Segregation）是什么？",
          "slug": "cqrs（command-query-responsibility-segregation）是什么？"
        },
        {
          "level": 3,
          "title": "Flux 是什么？",
          "slug": "flux-是什么？"
        },
        {
          "level": 2,
          "title": "Redux 的最佳实践",
          "slug": "redux-的最佳实践"
        },
        {
          "level": 2,
          "title": "简单实现 Redux",
          "slug": "简单实现-redux"
        },
        {
          "level": 3,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 3,
          "title": "状态管理器",
          "slug": "状态管理器"
        },
        {
          "level": 3,
          "title": "多文件协作",
          "slug": "多文件协作"
        },
        {
          "level": 3,
          "title": "中间件 middleware",
          "slug": "中间件-middleware"
        },
        {
          "level": 3,
          "title": "完整的 redux",
          "slug": "完整的-redux"
        },
        {
          "level": 3,
          "title": "最佳实践",
          "slug": "最佳实践"
        },
        {
          "level": 3,
          "title": "总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "前端安全",
      "frontmatter": {},
      "regularPath": "/knowledge/security.html",
      "relativePath": "knowledge/security.md",
      "key": "v-1a7f73a3",
      "path": "/knowledge/security.html",
      "headers": [
        {
          "level": 2,
          "title": "一、XSS",
          "slug": "一、xss"
        },
        {
          "level": 3,
          "title": "1.非持久型 XSS（反射型 XSS ）",
          "slug": "_1-非持久型-xss（反射型-xss-）"
        },
        {
          "level": 3,
          "title": "2.持久型 XSS（存储型 XSS）",
          "slug": "_2-持久型-xss（存储型-xss）"
        },
        {
          "level": 3,
          "title": "3.如何防御",
          "slug": "_3-如何防御"
        },
        {
          "level": 2,
          "title": "二、CSRF",
          "slug": "二、csrf"
        },
        {
          "level": 3,
          "title": "1.CSRF 攻击的原理",
          "slug": "_1-csrf-攻击的原理"
        },
        {
          "level": 3,
          "title": "2.如何防御",
          "slug": "_2-如何防御"
        },
        {
          "level": 2,
          "title": "三、点击劫持",
          "slug": "三、点击劫持"
        },
        {
          "level": 3,
          "title": "1. 特点",
          "slug": "_1-特点"
        },
        {
          "level": 3,
          "title": "2. 点击劫持的原理",
          "slug": "_2-点击劫持的原理"
        },
        {
          "level": 3,
          "title": "3. 如何防御",
          "slug": "_3-如何防御-2"
        },
        {
          "level": 2,
          "title": "四、URL 跳转漏洞",
          "slug": "四、url-跳转漏洞"
        },
        {
          "level": 3,
          "title": "1.URL 跳转漏洞原理",
          "slug": "_1-url-跳转漏洞原理"
        },
        {
          "level": 3,
          "title": "2.实现方式：",
          "slug": "_2-实现方式："
        },
        {
          "level": 3,
          "title": "3.如何防御",
          "slug": "_3-如何防御-3"
        },
        {
          "level": 2,
          "title": "五、SQL 注入",
          "slug": "五、sql-注入"
        },
        {
          "level": 3,
          "title": "1.SQL 注入的原理",
          "slug": "_1-sql-注入的原理"
        },
        {
          "level": 3,
          "title": "2.危害",
          "slug": "_2-危害"
        },
        {
          "level": 3,
          "title": "3.如何防御",
          "slug": "_3-如何防御-4"
        },
        {
          "level": 2,
          "title": "六、OS 命令注入攻击",
          "slug": "六、os-命令注入攻击"
        },
        {
          "level": 3,
          "title": "1.原理",
          "slug": "_1-原理"
        },
        {
          "level": 3,
          "title": "2.如何防御",
          "slug": "_2-如何防御-2"
        }
      ]
    },
    {
      "title": "前端路由的实现",
      "frontmatter": {},
      "regularPath": "/knowledge/router.html",
      "relativePath": "knowledge/router.md",
      "key": "v-938105de",
      "path": "/knowledge/router.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "1.hash 路由",
          "slug": "_1-hash-路由"
        },
        {
          "level": 3,
          "title": "1.1 初始化 class",
          "slug": "_1-1-初始化-class"
        },
        {
          "level": 3,
          "title": "1.2 实现路由 hash 储存与执行",
          "slug": "_1-2-实现路由-hash-储存与执行"
        },
        {
          "level": 3,
          "title": "1.3 监听对应事件",
          "slug": "_1-3-监听对应事件"
        },
        {
          "level": 2,
          "title": "2.增加回退功能",
          "slug": "_2-增加回退功能"
        },
        {
          "level": 3,
          "title": "2.1 实现后退功能",
          "slug": "_2-1-实现后退功能"
        },
        {
          "level": 3,
          "title": "2.2 完整实现 hash Router",
          "slug": "_2-2-完整实现-hash-router"
        },
        {
          "level": 2,
          "title": "3. HTML5 新路由方案",
          "slug": "_3-html5-新路由方案"
        },
        {
          "level": 3,
          "title": "3.1 History API",
          "slug": "_3-1-history-api"
        },
        {
          "level": 3,
          "title": "3.2 新标准下路由的实现",
          "slug": "_3-2-新标准下路由的实现"
        },
        {
          "level": 2,
          "title": "小结",
          "slug": "小结"
        }
      ]
    },
    {
      "title": "setState 到底是异步的还是同步的?",
      "frontmatter": {},
      "regularPath": "/knowledge/setState.html",
      "relativePath": "knowledge/setState.md",
      "key": "v-276110f6",
      "path": "/knowledge/setState.html",
      "headers": [
        {
          "level": 2,
          "title": "setState 真的是异步的吗 ？",
          "slug": "setstate-真的是异步的吗-？"
        },
        {
          "level": 2,
          "title": "一、合成事件中的`setState`",
          "slug": "一、合成事件中的setstate"
        },
        {
          "level": 2,
          "title": "二、生命周期函数中的`setState`",
          "slug": "二、生命周期函数中的setstate"
        },
        {
          "level": 2,
          "title": "三、原生事件中的`setState`",
          "slug": "三、原生事件中的setstate"
        },
        {
          "level": 2,
          "title": "四、setTimeout 中的`setState`",
          "slug": "四、settimeout-中的setstate"
        },
        {
          "level": 2,
          "title": "五、`setState`中的批量更新",
          "slug": "五、setstate中的批量更新"
        },
        {
          "level": 2,
          "title": "最后看个 🌰",
          "slug": "最后看个-🌰"
        },
        {
          "level": 2,
          "title": "总结 :",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "二叉树",
      "frontmatter": {},
      "regularPath": "/knowledge/tree.html",
      "relativePath": "knowledge/tree.md",
      "key": "v-dfaae932",
      "path": "/knowledge/tree.html",
      "headers": [
        {
          "level": 2,
          "title": "本章索引",
          "slug": "本章索引"
        },
        {
          "level": 2,
          "title": "给定一个二叉树，返回它的前、中、后序遍历",
          "slug": "给定一个二叉树，返回它的前、中、后序遍历"
        },
        {
          "level": 2,
          "title": "前序和后序正好相反的树",
          "slug": "前序和后序正好相反的树"
        },
        {
          "level": 2,
          "title": "给前序和中序重建二叉树",
          "slug": "给前序和中序重建二叉树"
        },
        {
          "level": 3,
          "title": "思路",
          "slug": "思路"
        },
        {
          "level": 2,
          "title": "给前序和中序，求后序",
          "slug": "给前序和中序，求后序"
        },
        {
          "level": 2,
          "title": "对称二叉树",
          "slug": "对称二叉树"
        },
        {
          "level": 2,
          "title": "二叉树镜像变换",
          "slug": "二叉树镜像变换"
        },
        {
          "level": 2,
          "title": "寻找二叉搜索树中的第 K 大节点",
          "slug": "寻找二叉搜索树中的第-k-大节点"
        },
        {
          "level": 2,
          "title": "判断是否为二叉搜索树的后序遍历",
          "slug": "判断是否为二叉搜索树的后序遍历"
        },
        {
          "level": 3,
          "title": "思路",
          "slug": "思路-2"
        },
        {
          "level": 2,
          "title": "求二叉树的最大深度",
          "slug": "求二叉树的最大深度"
        },
        {
          "level": 2,
          "title": "求二叉树最小深度",
          "slug": "求二叉树最小深度"
        },
        {
          "level": 2,
          "title": "判断平衡二叉树",
          "slug": "判断平衡二叉树"
        },
        {
          "level": 2,
          "title": "二叉树中的路径的和等于一个值",
          "slug": "二叉树中的路径的和等于一个值"
        },
        {
          "level": 2,
          "title": "判断子树",
          "slug": "判断子树"
        }
      ]
    },
    {
      "title": "字符串类面试题",
      "frontmatter": {},
      "regularPath": "/knowledge/string.html",
      "relativePath": "knowledge/string.md",
      "key": "v-4d67ccfe",
      "path": "/knowledge/string.html",
      "headers": [
        {
          "level": 2,
          "title": "解析 URL Params 为对象",
          "slug": "解析-url-params-为对象"
        },
        {
          "level": 2,
          "title": "模板引擎实现",
          "slug": "模板引擎实现"
        },
        {
          "level": 2,
          "title": "转化为驼峰命名",
          "slug": "转化为驼峰命名"
        },
        {
          "level": 2,
          "title": "查找字符串中出现最多的字符和个数",
          "slug": "查找字符串中出现最多的字符和个数"
        },
        {
          "level": 2,
          "title": "实现千位分隔符",
          "slug": "实现千位分隔符"
        },
        {
          "level": 2,
          "title": "判断是否是电话号码",
          "slug": "判断是否是电话号码"
        },
        {
          "level": 2,
          "title": "验证是否是邮箱",
          "slug": "验证是否是邮箱"
        }
      ]
    },
    {
      "title": "输入 URL 到页面渲染的整个流程",
      "frontmatter": {},
      "regularPath": "/knowledge/url.html",
      "relativePath": "knowledge/url.md",
      "key": "v-3b3a8499",
      "path": "/knowledge/url.html",
      "headers": [
        {
          "level": 2,
          "title": "一、地址栏网址缓存",
          "slug": "一、地址栏网址缓存"
        },
        {
          "level": 3,
          "title": "转换非 ASCII 的 Unicode 字符",
          "slug": "转换非-ascii-的-unicode-字符"
        },
        {
          "level": 2,
          "title": "二、检查 HSTS 预加载列表",
          "slug": "二、检查-hsts-预加载列表"
        },
        {
          "level": 2,
          "title": "三、DNS 缓存",
          "slug": "三、dns-缓存"
        },
        {
          "level": 3,
          "title": "域名解析的具体过程",
          "slug": "域名解析的具体过程"
        },
        {
          "level": 3,
          "title": "DNS Prefetch",
          "slug": "dns-prefetch"
        },
        {
          "level": 3,
          "title": "提个问题",
          "slug": "提个问题"
        },
        {
          "level": 2,
          "title": "四、ARP（地址解析协议）缓存",
          "slug": "四、arp（地址解析协议）缓存"
        },
        {
          "level": 2,
          "title": "五、TCP 三次握手",
          "slug": "五、tcp-三次握手"
        },
        {
          "level": 2,
          "title": "六、TCP 发送缓冲区 & 接收缓冲区",
          "slug": "六、tcp-发送缓冲区-接收缓冲区"
        },
        {
          "level": 3,
          "title": "发送缓冲区",
          "slug": "发送缓冲区"
        },
        {
          "level": 3,
          "title": "接收缓冲区",
          "slug": "接收缓冲区"
        },
        {
          "level": 3,
          "title": "流控制(Flow Control)",
          "slug": "流控制-flow-control"
        },
        {
          "level": 2,
          "title": "七、HTTP 请求缓存（ CDN 节点缓存、代理服务器缓存、浏览器缓存、后端动态计算结果缓存等 ）",
          "slug": "七、http-请求缓存（-cdn-节点缓存、代理服务器缓存、浏览器缓存、后端动态计算结果缓存等-）"
        },
        {
          "level": 2,
          "title": "八、浏览器解析渲染页面",
          "slug": "八、浏览器解析渲染页面"
        },
        {
          "level": 3,
          "title": "1.根据 HTML 解析 DOM 树",
          "slug": "_1-根据-html-解析-dom-树"
        },
        {
          "level": 3,
          "title": "2.根据 CSS 解析生成 CSS 规则树",
          "slug": "_2-根据-css-解析生成-css-规则树"
        },
        {
          "level": 3,
          "title": "3.结合 DOM 树和 CSS 规则树，生成渲染树",
          "slug": "_3-结合-dom-树和-css-规则树，生成渲染树"
        },
        {
          "level": 3,
          "title": "4.根据渲染树计算每一个节点的信息（布局）",
          "slug": "_4-根据渲染树计算每一个节点的信息（布局）"
        },
        {
          "level": 3,
          "title": "5.根据计算好的信息绘制页面",
          "slug": "_5-根据计算好的信息绘制页面"
        },
        {
          "level": 2,
          "title": "九、断开连接",
          "slug": "九、断开连接"
        }
      ]
    },
    {
      "title": "TCP 面试题",
      "frontmatter": {},
      "regularPath": "/knowledge/tcp.html",
      "relativePath": "knowledge/tcp.md",
      "key": "v-bda40b4e",
      "path": "/knowledge/tcp.html",
      "headers": [
        {
          "level": 2,
          "title": "TCP 的特性",
          "slug": "tcp-的特性"
        },
        {
          "level": 2,
          "title": "请简述 TCP\\UDP 的区别",
          "slug": "请简述-tcp-udp-的区别"
        },
        {
          "level": 2,
          "title": "TCP 粘包是怎么回事，如何处理?",
          "slug": "tcp-粘包是怎么回事，如何处理"
        },
        {
          "level": 2,
          "title": "为什么 udp 不会粘包？",
          "slug": "为什么-udp-不会粘包？"
        },
        {
          "level": 2,
          "title": "说一说 OSI 七层模型",
          "slug": "说一说-osi-七层模型"
        },
        {
          "level": 2,
          "title": "讲一下三次握手？",
          "slug": "讲一下三次握手？"
        },
        {
          "level": 2,
          "title": "讲一下四次握手？",
          "slug": "讲一下四次握手？"
        },
        {
          "level": 2,
          "title": "为什么连接的时候是三次握手，关闭的时候却是四次握手？",
          "slug": "为什么连接的时候是三次握手，关闭的时候却是四次握手？"
        },
        {
          "level": 2,
          "title": "为什么 TIME_WAIT 状态需要经过 2MSL(最大报文段生存时间)才能返回到 CLOSE 状态？",
          "slug": "为什么-time-wait-状态需要经过-2msl-最大报文段生存时间-才能返回到-close-状态？"
        },
        {
          "level": 2,
          "title": "为什么不能用两次握手进行连接？",
          "slug": "为什么不能用两次握手进行连接？"
        },
        {
          "level": 2,
          "title": "如果已经建立了连接，但是客户端突然出现故障了怎么办？",
          "slug": "如果已经建立了连接，但是客户端突然出现故障了怎么办？"
        },
        {
          "level": 2,
          "title": "TCP 中的 RST 标志(Reset)详解",
          "slug": "tcp-中的-rst-标志-reset-详解"
        },
        {
          "level": 2,
          "title": "###RST 攻击",
          "slug": "rst-攻击"
        }
      ]
    },
    {
      "title": "虚拟 DOM 原理",
      "frontmatter": {},
      "regularPath": "/knowledge/virtualDom.html",
      "relativePath": "knowledge/virtualDom.md",
      "key": "v-4d022fb5",
      "path": "/knowledge/virtualDom.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是 Virtual DOM",
          "slug": "什么是-virtual-dom"
        },
        {
          "level": 2,
          "title": "为什么需要 Virtual DOM",
          "slug": "为什么需要-virtual-dom"
        },
        {
          "level": 2,
          "title": "Virtual DOM 的关键要素",
          "slug": "virtual-dom-的关键要素"
        },
        {
          "level": 3,
          "title": "Virtual DOM 的创建",
          "slug": "virtual-dom-的创建"
        },
        {
          "level": 3,
          "title": "Virtual DOM Tree 的创建",
          "slug": "virtual-dom-tree-的创建"
        },
        {
          "level": 3,
          "title": "Virtual DOM 的更新",
          "slug": "virtual-dom-的更新"
        },
        {
          "level": 3,
          "title": "Virtual DOM 的 diff",
          "slug": "virtual-dom-的-diff"
        },
        {
          "level": 2,
          "title": "Virtual DOM 的优化",
          "slug": "virtual-dom-的优化"
        }
      ]
    },
    {
      "title": "webpack loader 实现",
      "frontmatter": {},
      "regularPath": "/knowledge/webpackLoader.html",
      "relativePath": "knowledge/webpackLoader.md",
      "key": "v-df96638e",
      "path": "/knowledge/webpackLoader.html",
      "headers": [
        {
          "level": 2,
          "title": "什么是 Loader ？",
          "slug": "什么是-loader-？"
        },
        {
          "level": 2,
          "title": "Loader 怎么用 ？",
          "slug": "loader-怎么用-？"
        },
        {
          "level": 3,
          "title": "1. 配置 webpack config 文件",
          "slug": "_1-配置-webpack-config-文件"
        },
        {
          "level": 3,
          "title": "2. 简单上手",
          "slug": "_2-简单上手"
        },
        {
          "level": 3,
          "title": "3. 进阶使用",
          "slug": "_3-进阶使用"
        },
        {
          "level": 2,
          "title": "用正确的姿势开发 Loader",
          "slug": "用正确的姿势开发-loader"
        },
        {
          "level": 3,
          "title": "1.单一职责",
          "slug": "_1-单一职责"
        },
        {
          "level": 3,
          "title": "2.链式组合",
          "slug": "_2-链式组合"
        },
        {
          "level": 3,
          "title": "3.模块化",
          "slug": "_3-模块化"
        },
        {
          "level": 3,
          "title": "4.无状态",
          "slug": "_4-无状态"
        },
        {
          "level": 3,
          "title": "5.使用 Loader 实用工具",
          "slug": "_5-使用-loader-实用工具"
        },
        {
          "level": 3,
          "title": "loader 的依赖",
          "slug": "loader-的依赖"
        },
        {
          "level": 3,
          "title": "模块依赖",
          "slug": "模块依赖"
        },
        {
          "level": 3,
          "title": "代码公用",
          "slug": "代码公用"
        },
        {
          "level": 3,
          "title": "绝对路径",
          "slug": "绝对路径"
        },
        {
          "level": 3,
          "title": "同伴依赖",
          "slug": "同伴依赖"
        },
        {
          "level": 2,
          "title": "Talk is cheep",
          "slug": "talk-is-cheep"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "Vue 面试题",
      "frontmatter": {},
      "regularPath": "/knowledge/vue.html",
      "relativePath": "knowledge/vue.md",
      "key": "v-b293808e",
      "path": "/knowledge/vue.html",
      "headers": [
        {
          "level": 2,
          "title": "你对 MVVM 的理解?",
          "slug": "你对-mvvm-的理解"
        },
        {
          "level": 3,
          "title": "MVVM 是什么?",
          "slug": "mvvm-是什么"
        },
        {
          "level": 3,
          "title": "MVVM 的优缺点?",
          "slug": "mvvm-的优缺点"
        },
        {
          "level": 2,
          "title": "你对 Vue 生命周期的理解？",
          "slug": "你对-vue-生命周期的理解？"
        },
        {
          "level": 3,
          "title": "生命周期是什么",
          "slug": "生命周期是什么"
        },
        {
          "level": 3,
          "title": "各个生命周期的作用",
          "slug": "各个生命周期的作用"
        },
        {
          "level": 3,
          "title": "生命周期示意图",
          "slug": "生命周期示意图"
        },
        {
          "level": 2,
          "title": "异步请求适合在哪个生命周期调用？",
          "slug": "异步请求适合在哪个生命周期调用？"
        },
        {
          "level": 2,
          "title": "Vue 组件如何通信？",
          "slug": "vue-组件如何通信？"
        },
        {
          "level": 2,
          "title": "computed 和 watch 有什么区别?",
          "slug": "computed-和-watch-有什么区别"
        },
        {
          "level": 2,
          "title": "Vue 是如何实现双向绑定的?",
          "slug": "vue-是如何实现双向绑定的"
        },
        {
          "level": 2,
          "title": "Proxy 与 Object.defineProperty 的优劣对比?",
          "slug": "proxy-与-object-defineproperty-的优劣对比"
        },
        {
          "level": 2,
          "title": "你是如何理解 Vue 的响应式系统的?",
          "slug": "你是如何理解-vue-的响应式系统的"
        },
        {
          "level": 2,
          "title": "既然 Vue 通过数据劫持可以精准探测数据变化,为什么还需要虚拟 DOM 进行 diff 检测差异?",
          "slug": "既然-vue-通过数据劫持可以精准探测数据变化-为什么还需要虚拟-dom-进行-diff-检测差异"
        },
        {
          "level": 2,
          "title": "Vue 为什么没有类似于 React 中 shouldComponentUpdate 的生命周期？",
          "slug": "vue-为什么没有类似于-react-中-shouldcomponentupdate-的生命周期？"
        },
        {
          "level": 2,
          "title": "Vue 中的 key 到底有什么用？",
          "slug": "vue-中的-key-到底有什么用？"
        }
      ]
    },
    {
      "title": "webpack 面试题",
      "frontmatter": {},
      "regularPath": "/knowledge/webpack.html",
      "relativePath": "knowledge/webpack.md",
      "key": "v-8ca8d04e",
      "path": "/knowledge/webpack.html",
      "headers": [
        {
          "level": 2,
          "title": "有哪些常见的 Loader？",
          "slug": "有哪些常见的-loader？"
        },
        {
          "level": 2,
          "title": "有哪些常见的 Plugin？",
          "slug": "有哪些常见的-plugin？"
        },
        {
          "level": 2,
          "title": "分别介绍 bundle，chunk，module 是什么",
          "slug": "分别介绍-bundle，chunk，module-是什么"
        },
        {
          "level": 2,
          "title": "Loader 和 Plugin 的不同？",
          "slug": "loader-和-plugin-的不同？"
        },
        {
          "level": 2,
          "title": "webpack 的构建流程是什么?",
          "slug": "webpack-的构建流程是什么"
        },
        {
          "level": 2,
          "title": "是否写过 Loader 和 Plugin？描述一下编写 loader 或 plugin 的思路？",
          "slug": "是否写过-loader-和-plugin？描述一下编写-loader-或-plugin-的思路？"
        },
        {
          "level": 2,
          "title": "使用 webpack 开发时，你用过哪些可以提高效率的插件？",
          "slug": "使用-webpack-开发时，你用过哪些可以提高效率的插件？"
        },
        {
          "level": 2,
          "title": "webpack 的热更新是如何做到的？说明其原理？",
          "slug": "webpack-的热更新是如何做到的？说明其原理？"
        },
        {
          "level": 2,
          "title": "source map 是什么？生产环境怎么用？",
          "slug": "source-map-是什么？生产环境怎么用？"
        },
        {
          "level": 2,
          "title": "如何用 webpack 来优化前端性能？",
          "slug": "如何用-webpack-来优化前端性能？"
        },
        {
          "level": 2,
          "title": "如何提高 webpack 的打包速度?",
          "slug": "如何提高-webpack-的打包速度"
        },
        {
          "level": 2,
          "title": "如何提高 webpack 的构建速度？",
          "slug": "如何提高-webpack-的构建速度？"
        },
        {
          "level": 2,
          "title": "怎么配置单页应用？怎么配置多页应用？",
          "slug": "怎么配置单页应用？怎么配置多页应用？"
        },
        {
          "level": 2,
          "title": "聊一聊 Babel 原理吧",
          "slug": "聊一聊-babel-原理吧"
        }
      ]
    },
    {
      "title": "Webpack 模块机制",
      "frontmatter": {},
      "regularPath": "/knowledge/webpackMoudle.html",
      "relativePath": "knowledge/webpackMoudle.md",
      "key": "v-5688bece",
      "path": "/knowledge/webpackMoudle.html",
      "headers": [
        {
          "level": 3,
          "title": "准备点材料",
          "slug": "准备点材料"
        },
        {
          "level": 3,
          "title": "模块初始化函数",
          "slug": "模块初始化函数"
        },
        {
          "level": 3,
          "title": "modules && webpack_exports****",
          "slug": "modules-webpack-exports"
        },
        {
          "level": 3,
          "title": "模块 id",
          "slug": "模块-id"
        },
        {
          "level": 3,
          "title": "require 函数",
          "slug": "require-函数"
        },
        {
          "level": 3,
          "title": "最后，我们来改造一下 bundle.js",
          "slug": "最后，我们来改造一下-bundle-js"
        },
        {
          "level": 3,
          "title": "总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "webpack 插件化设计",
      "frontmatter": {},
      "regularPath": "/knowledge/webpackPluginDesign.html",
      "relativePath": "knowledge/webpackPluginDesign.md",
      "key": "v-45a1c28e",
      "path": "/knowledge/webpackPluginDesign.html",
      "headers": [
        {
          "level": 2,
          "title": "前言",
          "slug": "前言"
        },
        {
          "level": 2,
          "title": "事件系统",
          "slug": "事件系统"
        },
        {
          "level": 2,
          "title": "插件化设计",
          "slug": "插件化设计"
        },
        {
          "level": 2,
          "title": "执行实例",
          "slug": "执行实例"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        }
      ]
    },
    {
      "title": "webpack 插件编写",
      "frontmatter": {},
      "regularPath": "/knowledge/webpackPlugin.html",
      "relativePath": "knowledge/webpackPlugin.md",
      "key": "v-319ac239",
      "path": "/knowledge/webpackPlugin.html",
      "headers": [
        {
          "level": 2,
          "title": "Tabable 是什么？",
          "slug": "tabable-是什么？"
        },
        {
          "level": 2,
          "title": "Tabable 用法",
          "slug": "tabable-用法"
        },
        {
          "level": 3,
          "title": "进阶一下",
          "slug": "进阶一下"
        },
        {
          "level": 2,
          "title": "Tabable 的其他方法",
          "slug": "tabable-的其他方法"
        },
        {
          "level": 2,
          "title": "webpack 流程",
          "slug": "webpack-流程"
        },
        {
          "level": 3,
          "title": "1. webpack 入口（webpack.config.js+shell options）",
          "slug": "_1-webpack-入口（webpack-config-js-shell-options）"
        },
        {
          "level": 3,
          "title": "2. 用 yargs 参数解析（optimist）",
          "slug": "_2-用-yargs-参数解析（optimist）"
        },
        {
          "level": 3,
          "title": "3.webpack 初始化",
          "slug": "_3-webpack-初始化"
        },
        {
          "level": 3,
          "title": "4. run  开始编译",
          "slug": "_4-run-开始编译"
        },
        {
          "level": 3,
          "title": "5.触发compile",
          "slug": "_5-触发compile"
        },
        {
          "level": 3,
          "title": "6.addEntry() make 分析入口文件创建模块对象",
          "slug": "_6-addentry-make-分析入口文件创建模块对象"
        },
        {
          "level": 3,
          "title": "7. 构建模块",
          "slug": "_7-构建模块"
        },
        {
          "level": 3,
          "title": "8. 封装构建结果（seal）",
          "slug": "_8-封装构建结果（seal）"
        },
        {
          "level": 3,
          "title": "9. 输出资源（emit）",
          "slug": "_9-输出资源（emit）"
        },
        {
          "level": 2,
          "title": "总结",
          "slug": "总结"
        },
        {
          "level": 2,
          "title": "实战！写一个插件",
          "slug": "实战！写一个插件"
        },
        {
          "level": 3,
          "title": "怎么写一个插件？",
          "slug": "怎么写一个插件？"
        },
        {
          "level": 3,
          "title": "完成插件初始架构",
          "slug": "完成插件初始架构"
        },
        {
          "level": 3,
          "title": "插件的常用对象",
          "slug": "插件的常用对象"
        },
        {
          "level": 3,
          "title": "编写插件",
          "slug": "编写插件"
        }
      ]
    }
  ],
  "themeConfig": {
    "repo": "YoFoon/fe-face",
    "editLinks": true,
    "locales": {
      "/": {
        "editLinkText": "在 GitHub 上编辑此页",
        "nav": [
          {
            "text": "知识",
            "link": "/knowledge/"
          },
          {
            "text": "博客",
            "link": "/blog/"
          }
        ],
        "sidebar": {
          "/knowledge/": [
            {
              "title": "前言",
              "collapsable": false,
              "children": [
                "",
                "book"
              ]
            },
            {
              "title": "前端基础",
              "collapsable": false,
              "children": [
                "html",
                "css",
                "jsBasic",
                "browser",
                "jsonp",
                "jsWritten"
              ]
            },
            {
              "title": "前端深入",
              "collapsable": false,
              "children": [
                "hoisting",
                "eventLoop",
                "immutable",
                "memory",
                "deepclone",
                "event",
                "mechanism"
              ]
            },
            {
              "title": "浏览器",
              "collapsable": false,
              "children": [
                "dom",
                "domRender",
                "cache",
                "url",
                "requestHeader"
              ]
            },
            {
              "title": "网络",
              "collapsable": false,
              "children": [
                "http",
                "tcp",
                "cdn",
                "https",
                "http2",
                "httpWritten"
              ]
            },
            {
              "title": "常用算法",
              "collapsable": false,
              "children": [
                "algorithm",
                "string",
                "tree",
                "chain"
              ]
            },
            {
              "title": "前端框架",
              "collapsable": false,
              "children": [
                "react",
                "virtualDom",
                "devsProxy",
                "setState",
                "router",
                "reactError",
                "fiber",
                "abstract",
                "reactHook"
              ]
            },
            {
              "title": "性能",
              "collapsable": false,
              "children": [
                "load",
                "execute"
              ]
            },
            {
              "title": "工程化",
              "collapsable": false,
              "children": [
                "webpack",
                "engineering",
                "ast",
                "WebpackHMR",
                "webpackPlugin",
                "webpackPluginDesign",
                "webpackMoudle",
                "webpackLoader",
                "babelPlugin"
              ]
            },
            {
              "title": "安全",
              "collapsable": false,
              "children": [
                "security"
              ]
            }
          ],
          "/blog/": [
            {
              "title": "博客",
              "collapsable": false,
              "children": [
                "",
                "20200414-hide-element",
                "20200414-intersection-observer",
                "20200414-shell-push-git",
                "20200421-wang-editor-add-upload-file",
                "20200422-ye-mian-zhu-ru-50-wan-ge-li",
                "20200424-qian-duan-gong-cheng-hua",
                "20200430-ArrayBuffer-Blob-File",
                "20200914-tong-guo-localStorage-tong-yuan-fa-song-xin-xi"
              ]
            },
            {
              "title": "大数据处理",
              "collapsable": false,
              "children": [
                "20200428-BitMap",
                "20200509-node-big-text"
              ]
            },
            {
              "title": "react",
              "collapsable": true,
              "children": [
                "20200414-jsx-2-virtual-dom",
                "20200414-react-data-struct",
                "20200414-react-dom-render",
                "20200414-expiration-time",
                "20200414-enqueue-update",
                "20200414-schedule-work"
              ]
            }
          ]
        }
      }
    }
  },
  "locales": {
    "/": {
      "lang": "zh-CN",
      "title": "YoFoon's前端小站",
      "description": "好好学习，努力化蛹成蝶",
      "path": "/"
    }
  }
}